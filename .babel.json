{
  "{\"filename\":\"/app/server/index.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/server\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server/index.js",
      "filenameRelative": "/app/server/index.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "index.js",
      "sourceFileName": "index.js",
      "sourceRoot": "/app/server",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/server",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "index"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire('babel-register');\nrequire('babel-polyfill');\n\nvar app = (0, _express2.default)();\n\napp.use(_express2.default.static('public'));\n\napp.get(\"/\", function (request, response) {\n  response.sendFile(__dirname + '/views/index.html');\n});\n\nvar listener = app.listen(process.env.PORT, function () {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJhcHAiLCJ1c2UiLCJzdGF0aWMiLCJnZXQiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJzZW5kRmlsZSIsIl9fZGlybmFtZSIsImxpc3RlbmVyIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25zb2xlIiwibG9nIiwiYWRkcmVzcyIsInBvcnQiXSwibWFwcGluZ3MiOiI7O0FBR0E7Ozs7OztBQUhBQSxRQUFRLGdCQUFSO0FBQ0FBLFFBQVEsZ0JBQVI7O0FBSUEsSUFBTUMsTUFBTSx3QkFBWjs7QUFFQUEsSUFBSUMsR0FBSixDQUFRLGtCQUFRQyxNQUFSLENBQWUsUUFBZixDQUFSOztBQUVBRixJQUFJRyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNDLE9BQUQsRUFBVUMsUUFBVixFQUF1QjtBQUNsQ0EsV0FBU0MsUUFBVCxDQUFxQkMsU0FBckI7QUFDRCxDQUZEOztBQUlBLElBQU1DLFdBQVdSLElBQUlTLE1BQUosQ0FBV0MsUUFBUUMsR0FBUixDQUFZQyxJQUF2QixFQUE2QixZQUFNO0FBQ2xEQyxVQUFRQyxHQUFSLENBQVksbUNBQW1DTixTQUFTTyxPQUFULEdBQW1CQyxJQUFsRTtBQUNELENBRmdCLENBQWpCIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlUm9vdCI6Ii9hcHAvc2VydmVyIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnYmFiZWwtcmVnaXN0ZXInKTtcbnJlcXVpcmUoJ2JhYmVsLXBvbHlmaWxsJyk7XG5cbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcblxuYXBwLmdldChcIi9cIiwgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIHJlc3BvbnNlLnNlbmRGaWxlKGAke19fZGlybmFtZX0vdmlld3MvaW5kZXguaHRtbGApO1xufSk7XG5cbmNvbnN0IGxpc3RlbmVyID0gYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JULCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdZb3VyIGFwcCBpcyBsaXN0ZW5pbmcgb24gcG9ydCAnICsgbGlzdGVuZXIuYWRkcmVzcygpLnBvcnQpO1xufSk7XG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "app",
        "use",
        "static",
        "get",
        "request",
        "response",
        "sendFile",
        "__dirname",
        "listener",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log",
        "address",
        "port"
      ],
      "mappings": ";;AAGA;;;;;;AAHAA,QAAQ,gBAAR;AACAA,QAAQ,gBAAR;;AAIA,IAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;;AAEAF,IAAIG,GAAJ,CAAQ,GAAR,EAAa,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAClCA,WAASC,QAAT,CAAqBC,SAArB;AACD,CAFD;;AAIA,IAAMC,WAAWR,IAAIS,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAvB,EAA6B,YAAM;AAClDC,UAAQC,GAAR,CAAY,mCAAmCN,SAASO,OAAT,GAAmBC,IAAlE;AACD,CAFgB,CAAjB",
      "file": "index.js",
      "sourceRoot": "/app/server",
      "sourcesContent": [
        "require('babel-register');\nrequire('babel-polyfill');\n\nimport express from 'express';\n\nconst app = express();\n\napp.use(express.static('public'));\n\napp.get(\"/\", (request, response) => {\n  response.sendFile(`${__dirname}/views/index.html`);\n});\n\nconst listener = app.listen(process.env.PORT, () => {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\n\n"
      ]
    },
    "mtime": 1497985239458
  },
  "{\"filename\":\"/app/server.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "express",
            "imported": [
              "default"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "express"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _express = require('express');\n\nvar _express2 = _interopRequireDefault(_express);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar app = (0, _express2.default)();\n\napp.use(_express2.default.static('public'));\n\napp.get(\"/\", function (request, response) {\n  response.sendFile(__dirname + '/views/index.html');\n});\n\nvar listener = app.listen(process.env.PORT, function () {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJzdGF0aWMiLCJnZXQiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJzZW5kRmlsZSIsIl9fZGlybmFtZSIsImxpc3RlbmVyIiwibGlzdGVuIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25zb2xlIiwibG9nIiwiYWRkcmVzcyIsInBvcnQiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUVBLElBQU1BLE1BQU0sd0JBQVo7O0FBRUFBLElBQUlDLEdBQUosQ0FBUSxrQkFBUUMsTUFBUixDQUFlLFFBQWYsQ0FBUjs7QUFFQUYsSUFBSUcsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxPQUFELEVBQVVDLFFBQVYsRUFBdUI7QUFDbENBLFdBQVNDLFFBQVQsQ0FBcUJDLFNBQXJCO0FBQ0QsQ0FGRDs7QUFJQSxJQUFNQyxXQUFXUixJQUFJUyxNQUFKLENBQVdDLFFBQVFDLEdBQVIsQ0FBWUMsSUFBdkIsRUFBNkIsWUFBTTtBQUNsREMsVUFBUUMsR0FBUixDQUFZLG1DQUFtQ04sU0FBU08sT0FBVCxHQUFtQkMsSUFBbEU7QUFDRCxDQUZnQixDQUFqQiIsImZpbGUiOiJzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiL2FwcCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMoJ3B1YmxpYycpKTtcblxuYXBwLmdldChcIi9cIiwgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG4gIHJlc3BvbnNlLnNlbmRGaWxlKGAke19fZGlybmFtZX0vdmlld3MvaW5kZXguaHRtbGApO1xufSk7XG5cbmNvbnN0IGxpc3RlbmVyID0gYXBwLmxpc3Rlbihwcm9jZXNzLmVudi5QT1JULCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCdZb3VyIGFwcCBpcyBsaXN0ZW5pbmcgb24gcG9ydCAnICsgbGlzdGVuZXIuYWRkcmVzcygpLnBvcnQpO1xufSk7XG5cbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "static",
        "get",
        "request",
        "response",
        "sendFile",
        "__dirname",
        "listener",
        "listen",
        "process",
        "env",
        "PORT",
        "console",
        "log",
        "address",
        "port"
      ],
      "mappings": ";;AAAA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;;AAEAF,IAAIG,GAAJ,CAAQ,GAAR,EAAa,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAClCA,WAASC,QAAT,CAAqBC,SAArB;AACD,CAFD;;AAIA,IAAMC,WAAWR,IAAIS,MAAJ,CAAWC,QAAQC,GAAR,CAAYC,IAAvB,EAA6B,YAAM;AAClDC,UAAQC,GAAR,CAAY,mCAAmCN,SAASO,OAAT,GAAmBC,IAAlE;AACD,CAFgB,CAAjB",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "import express from 'express';\n\nconst app = express();\n\napp.use(express.static('public'));\n\napp.get(\"/\", (request, response) => {\n  response.sendFile(`${__dirname}/views/index.html`);\n});\n\nconst listener = app.listen(process.env.PORT, () => {\n  console.log('Your app is listening on port ' + listener.address().port);\n});\n\n"
      ]
    },
    "mtime": 1497985631657
  },
  "{\"filename\":\"/app/server.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar express = require('express');\nvar bodyParser = require('body-parser');\nvar helmet = require('helmet');\nvar expect = require('chai').expect;\nvar cors = require('cors');\nvar PORT = process.env.PORT;\nvar TEST = process.env.NODE_ENV === 'test';\nvar apiRoutes = require('./routes/api.js');\nvar fccTestingRoutes = require('./routes/fcctesting.js');\nvar runner = require('./test-runner');\nvar app = express();\n\nvar MongoClient = require('mongodb').MongoClient;\nvar URL = process.env.DB;\nvar dbName = 'fcc_jtodd';\nvar client = new MongoClient(URL, { useNewUrlParser: true });\n\napp.use(express.static('public'));\napp.use(cors({ origin: '*' }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(helmet.frameguard({ action: 'sameorigin' }));\napp.use(helmet.dnsPrefetchControl());\napp.use(helmet.referrerPolicy({ policy: 'same-origin' }));\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\nclient.connect(function (err) {\n  if (err) console.log('Db connection error');\n  var db = client.db(dbName);\n  apiRoutes(app, db);\n  app.listen(PORT, function () {\n    console.log('Your app is listening on port ' + PORT);\n    if (TEST) {\n      console.log('Running Tests...');\n      setTimeout(function () {\n        try {\n          runner.run();\n        } catch (e) {\n          var error = e;\n          console.log('Tests are not valid:');\n          console.log(error);\n        }\n      }, 3500);\n    }\n  });\n});\n\nmodule.exports = app; //for testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJoZWxtZXQiLCJleHBlY3QiLCJjb3JzIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJURVNUIiwiTk9ERV9FTlYiLCJhcGlSb3V0ZXMiLCJmY2NUZXN0aW5nUm91dGVzIiwicnVubmVyIiwiYXBwIiwiTW9uZ29DbGllbnQiLCJVUkwiLCJEQiIsImRiTmFtZSIsImNsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZSIsInN0YXRpYyIsIm9yaWdpbiIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJmcmFtZWd1YXJkIiwiYWN0aW9uIiwiZG5zUHJlZmV0Y2hDb250cm9sIiwicmVmZXJyZXJQb2xpY3kiLCJwb2xpY3kiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsImRiIiwibGlzdGVuIiwic2V0VGltZW91dCIsInJ1biIsImUiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsVUFBb0JDLFFBQVEsU0FBUixDQUExQjtBQUNBLElBQU1DLGFBQW9CRCxRQUFRLGFBQVIsQ0FBMUI7QUFDQSxJQUFNRSxTQUFvQkYsUUFBUSxRQUFSLENBQTFCO0FBQ0EsSUFBTUcsU0FBb0JILFFBQVEsTUFBUixFQUFnQkcsTUFBMUM7QUFDQSxJQUFNQyxPQUFvQkosUUFBUSxNQUFSLENBQTFCO0FBQ0EsSUFBTUssT0FBb0JDLFFBQVFDLEdBQVIsQ0FBWUYsSUFBdEM7QUFDQSxJQUFNRyxPQUFvQkYsUUFBUUMsR0FBUixDQUFZRSxRQUFaLEtBQXlCLE1BQW5EO0FBQ0EsSUFBTUMsWUFBb0JWLFFBQVEsaUJBQVIsQ0FBMUI7QUFDQSxJQUFNVyxtQkFBb0JYLFFBQVEsd0JBQVIsQ0FBMUI7QUFDQSxJQUFNWSxTQUFvQlosUUFBUSxlQUFSLENBQTFCO0FBQ0EsSUFBTWEsTUFBb0JkLFNBQTFCOztBQUVBLElBQU1lLGNBQWNkLFFBQVEsU0FBUixFQUFtQmMsV0FBdkM7QUFDQSxJQUFNQyxNQUFjVCxRQUFRQyxHQUFSLENBQVlTLEVBQWhDO0FBQ0EsSUFBTUMsU0FBYyxXQUFwQjtBQUNBLElBQU1DLFNBQWMsSUFBSUosV0FBSixDQUFnQkMsR0FBaEIsRUFBcUIsRUFBQ0ksaUJBQWlCLElBQWxCLEVBQXJCLENBQXBCOztBQUVBTixJQUFJTyxHQUFKLENBQVFyQixRQUFRc0IsTUFBUixDQUFlLFFBQWYsQ0FBUjtBQUNBUixJQUFJTyxHQUFKLENBQVFoQixLQUFLLEVBQUNrQixRQUFRLEdBQVQsRUFBTCxDQUFSO0FBQ0FULElBQUlPLEdBQUosQ0FBUW5CLFdBQVdzQixJQUFYLEVBQVI7QUFDQVYsSUFBSU8sR0FBSixDQUFRbkIsV0FBV3VCLFVBQVgsQ0FBc0IsRUFBRUMsVUFBVSxJQUFaLEVBQXRCLENBQVI7O0FBRUFaLElBQUlPLEdBQUosQ0FBUWxCLE9BQU93QixVQUFQLENBQWtCLEVBQUVDLFFBQVEsWUFBVixFQUFsQixDQUFSO0FBQ0FkLElBQUlPLEdBQUosQ0FBUWxCLE9BQU8wQixrQkFBUCxFQUFSO0FBQ0FmLElBQUlPLEdBQUosQ0FBUWxCLE9BQU8yQixjQUFQLENBQXNCLEVBQUVDLFFBQVEsYUFBVixFQUF0QixDQUFSOztBQUVBO0FBQ0FuQixpQkFBaUJFLEdBQWpCOztBQUVBSyxPQUFPYSxPQUFQLENBQWUsZUFBTztBQUNwQixNQUFJQyxHQUFKLEVBQVNDLFFBQVFDLEdBQVIsQ0FBWSxxQkFBWjtBQUNULE1BQU1DLEtBQUtqQixPQUFPaUIsRUFBUCxDQUFVbEIsTUFBVixDQUFYO0FBQ0FQLFlBQVVHLEdBQVYsRUFBZXNCLEVBQWY7QUFDQXRCLE1BQUl1QixNQUFKLENBQVcvQixJQUFYLEVBQWlCLFlBQU07QUFDckI0QixZQUFRQyxHQUFSLENBQVksbUNBQW1DN0IsSUFBL0M7QUFDQSxRQUFJRyxJQUFKLEVBQVU7QUFDUnlCLGNBQVFDLEdBQVIsQ0FBWSxrQkFBWjtBQUNBRyxpQkFBVyxZQUFNO0FBQ2YsWUFBSTtBQUNGekIsaUJBQU8wQixHQUFQO0FBQ0QsU0FGRCxDQUVFLE9BQU1DLENBQU4sRUFBUztBQUNULGNBQUlDLFFBQVFELENBQVo7QUFDQU4sa0JBQVFDLEdBQVIsQ0FBWSxzQkFBWjtBQUNBRCxrQkFBUUMsR0FBUixDQUFZTSxLQUFaO0FBQ0Q7QUFDRixPQVJELEVBUUcsSUFSSDtBQVNEO0FBQ0YsR0FkRDtBQWVELENBbkJEOztBQXNCQUMsT0FBT0MsT0FBUCxHQUFpQjdCLEdBQWpCLEMsQ0FBc0IiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzICAgICAgICAgICA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgICAgICAgID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbmNvbnN0IGhlbG1ldCAgICAgICAgICAgID0gcmVxdWlyZSgnaGVsbWV0Jyk7XG5jb25zdCBleHBlY3QgICAgICAgICAgICA9IHJlcXVpcmUoJ2NoYWknKS5leHBlY3Q7XG5jb25zdCBjb3JzICAgICAgICAgICAgICA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IFBPUlQgICAgICAgICAgICAgID0gcHJvY2Vzcy5lbnYuUE9SVDtcbmNvbnN0IFRFU1QgICAgICAgICAgICAgID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd0ZXN0JztcbmNvbnN0IGFwaVJvdXRlcyAgICAgICAgID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXBpLmpzJyk7XG5jb25zdCBmY2NUZXN0aW5nUm91dGVzICA9IHJlcXVpcmUoJy4vcm91dGVzL2ZjY3Rlc3RpbmcuanMnKTtcbmNvbnN0IHJ1bm5lciAgICAgICAgICAgID0gcmVxdWlyZSgnLi90ZXN0LXJ1bm5lcicpO1xuY29uc3QgYXBwICAgICAgICAgICAgICAgPSBleHByZXNzKCk7XG5cbmNvbnN0IE1vbmdvQ2xpZW50ID0gcmVxdWlyZSgnbW9uZ29kYicpLk1vbmdvQ2xpZW50O1xuY29uc3QgVVJMICAgICAgICAgPSBwcm9jZXNzLmVudi5EQjtcbmNvbnN0IGRiTmFtZSAgICAgID0gJ2ZjY19qdG9kZCc7XG5jb25zdCBjbGllbnQgICAgICA9IG5ldyBNb25nb0NsaWVudChVUkwsIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuYXBwLnVzZShjb3JzKHtvcmlnaW46ICcqJ30pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5cbmFwcC51c2UoaGVsbWV0LmZyYW1lZ3VhcmQoeyBhY3Rpb246ICdzYW1lb3JpZ2luJyB9KSk7XG5hcHAudXNlKGhlbG1ldC5kbnNQcmVmZXRjaENvbnRyb2woKSk7XG5hcHAudXNlKGhlbG1ldC5yZWZlcnJlclBvbGljeSh7IHBvbGljeTogJ3NhbWUtb3JpZ2luJyB9KSk7XG5cbi8vRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzXG5mY2NUZXN0aW5nUm91dGVzKGFwcCk7XG4gICAgXG5jbGllbnQuY29ubmVjdChlcnIgPT4ge1xuICBpZiAoZXJyKSBjb25zb2xlLmxvZygnRGIgY29ubmVjdGlvbiBlcnJvcicpO1xuICBjb25zdCBkYiA9IGNsaWVudC5kYihkYk5hbWUpO1xuICBhcGlSb3V0ZXMoYXBwLCBkYik7XG4gIGFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdZb3VyIGFwcCBpcyBsaXN0ZW5pbmcgb24gcG9ydCAnICsgUE9SVCk7XG4gICAgaWYgKFRFU1QpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdSdW5uaW5nIFRlc3RzLi4uJyk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBydW5uZXIucnVuKCk7XG4gICAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICAgIHZhciBlcnJvciA9IGU7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1Rlc3RzIGFyZSBub3QgdmFsaWQ6Jyk7XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9LCAzNTAwKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7IC8vZm9yIHRlc3RpbmciXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "helmet",
        "expect",
        "cors",
        "PORT",
        "process",
        "env",
        "TEST",
        "NODE_ENV",
        "apiRoutes",
        "fccTestingRoutes",
        "runner",
        "app",
        "MongoClient",
        "URL",
        "DB",
        "dbName",
        "client",
        "useNewUrlParser",
        "use",
        "static",
        "origin",
        "json",
        "urlencoded",
        "extended",
        "frameguard",
        "action",
        "dnsPrefetchControl",
        "referrerPolicy",
        "policy",
        "connect",
        "err",
        "console",
        "log",
        "db",
        "listen",
        "setTimeout",
        "run",
        "e",
        "error",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,UAAoBC,QAAQ,SAAR,CAA1B;AACA,IAAMC,aAAoBD,QAAQ,aAAR,CAA1B;AACA,IAAME,SAAoBF,QAAQ,QAAR,CAA1B;AACA,IAAMG,SAAoBH,QAAQ,MAAR,EAAgBG,MAA1C;AACA,IAAMC,OAAoBJ,QAAQ,MAAR,CAA1B;AACA,IAAMK,OAAoBC,QAAQC,GAAR,CAAYF,IAAtC;AACA,IAAMG,OAAoBF,QAAQC,GAAR,CAAYE,QAAZ,KAAyB,MAAnD;AACA,IAAMC,YAAoBV,QAAQ,iBAAR,CAA1B;AACA,IAAMW,mBAAoBX,QAAQ,wBAAR,CAA1B;AACA,IAAMY,SAAoBZ,QAAQ,eAAR,CAA1B;AACA,IAAMa,MAAoBd,SAA1B;;AAEA,IAAMe,cAAcd,QAAQ,SAAR,EAAmBc,WAAvC;AACA,IAAMC,MAAcT,QAAQC,GAAR,CAAYS,EAAhC;AACA,IAAMC,SAAc,WAApB;AACA,IAAMC,SAAc,IAAIJ,WAAJ,CAAgBC,GAAhB,EAAqB,EAACI,iBAAiB,IAAlB,EAArB,CAApB;;AAEAN,IAAIO,GAAJ,CAAQrB,QAAQsB,MAAR,CAAe,QAAf,CAAR;AACAR,IAAIO,GAAJ,CAAQhB,KAAK,EAACkB,QAAQ,GAAT,EAAL,CAAR;AACAT,IAAIO,GAAJ,CAAQnB,WAAWsB,IAAX,EAAR;AACAV,IAAIO,GAAJ,CAAQnB,WAAWuB,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEAZ,IAAIO,GAAJ,CAAQlB,OAAOwB,UAAP,CAAkB,EAAEC,QAAQ,YAAV,EAAlB,CAAR;AACAd,IAAIO,GAAJ,CAAQlB,OAAO0B,kBAAP,EAAR;AACAf,IAAIO,GAAJ,CAAQlB,OAAO2B,cAAP,CAAsB,EAAEC,QAAQ,aAAV,EAAtB,CAAR;;AAEA;AACAnB,iBAAiBE,GAAjB;;AAEAK,OAAOa,OAAP,CAAe,eAAO;AACpB,MAAIC,GAAJ,EAASC,QAAQC,GAAR,CAAY,qBAAZ;AACT,MAAMC,KAAKjB,OAAOiB,EAAP,CAAUlB,MAAV,CAAX;AACAP,YAAUG,GAAV,EAAesB,EAAf;AACAtB,MAAIuB,MAAJ,CAAW/B,IAAX,EAAiB,YAAM;AACrB4B,YAAQC,GAAR,CAAY,mCAAmC7B,IAA/C;AACA,QAAIG,IAAJ,EAAU;AACRyB,cAAQC,GAAR,CAAY,kBAAZ;AACAG,iBAAW,YAAM;AACf,YAAI;AACFzB,iBAAO0B,GAAP;AACD,SAFD,CAEE,OAAMC,CAAN,EAAS;AACT,cAAIC,QAAQD,CAAZ;AACAN,kBAAQC,GAAR,CAAY,sBAAZ;AACAD,kBAAQC,GAAR,CAAYM,KAAZ;AACD;AACF,OARD,EAQG,IARH;AASD;AACF,GAdD;AAeD,CAnBD;;AAsBAC,OAAOC,OAAP,GAAiB7B,GAAjB,C,CAAsB",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "const express           = require('express');\nconst bodyParser        = require('body-parser');\nconst helmet            = require('helmet');\nconst expect            = require('chai').expect;\nconst cors              = require('cors');\nconst PORT              = process.env.PORT;\nconst TEST              = process.env.NODE_ENV === 'test';\nconst apiRoutes         = require('./routes/api.js');\nconst fccTestingRoutes  = require('./routes/fcctesting.js');\nconst runner            = require('./test-runner');\nconst app               = express();\n\nconst MongoClient = require('mongodb').MongoClient;\nconst URL         = process.env.DB;\nconst dbName      = 'fcc_jtodd';\nconst client      = new MongoClient(URL, {useNewUrlParser: true});\n\napp.use(express.static('public'));\napp.use(cors({origin: '*'}));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(helmet.frameguard({ action: 'sameorigin' }));\napp.use(helmet.dnsPrefetchControl());\napp.use(helmet.referrerPolicy({ policy: 'same-origin' }));\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n    \nclient.connect(err => {\n  if (err) console.log('Db connection error');\n  const db = client.db(dbName);\n  apiRoutes(app, db);\n  app.listen(PORT, () => {\n    console.log('Your app is listening on port ' + PORT);\n    if (TEST) {\n      console.log('Running Tests...');\n      setTimeout(() => {\n        try {\n          runner.run();\n        } catch(e) {\n          var error = e;\n          console.log('Tests are not valid:');\n          console.log(error);\n        }\n      }, 3500);\n    }\n  });\n});\n\n\nmodule.exports = app; //for testing"
      ]
    },
    "mtime": 1548148294000
  },
  "{\"filename\":\"/app/routes/api.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongodb",
            "imported": [
              "default",
              "ObjectId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "MongoClient"
              },
              {
                "kind": "named",
                "imported": "ObjectId",
                "local": "ObjectId"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/routes/api.js",
      "filenameRelative": "/app/routes/api.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "api.js",
      "sourceFileName": "api.js",
      "sourceRoot": "/app/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "api"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _mongodb = require('mongodb');\n\nvar _mongodb2 = _interopRequireDefault(_mongodb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Thread = require('../models/Thread_Model.js');\n\nmodule.exports = function (app, db) {\n  var Threads = db.collection('threads');\n\n  var boardThreads = function boardThreads(board) {\n    return new Promise(function (resolve, reject) {\n      Threads.find({ board: board }).sort([['bumped_on', -1]]) //.limit(10)\n      .project({ delete_password: 0, reported: 0, \"replies.delete_password\": 0, \"replies.reported\": 0 }).toArray(function (err, docs) {\n        if (err) return reject(err);\n\n        docs.forEach(function (thread) {\n          thread.comments = thread.replies.length;\n          thread.replies.sort(function (a, b) {\n            return new Date(b.created_on) - new Date(a.created_on);\n          });\n          thread.replies = thread.replies.length > 3 ? thread.replies.slice(0, 3) : thread.replies;\n        });\n\n        return resolve({\n          threads: docs.length > 10 ? docs.slice(0, 10) : docs,\n          pages: Math.floor(docs.length / 10) + 1\n        });\n      });\n    });\n  };\n\n  var singleThread = function singleThread(thread_id) {\n    var projection = {\n      delete_password: 0,\n      reported: 0,\n      \"replies.delete_password\": 0,\n      \"replies.reported\": 0\n    };\n\n    return new Promise(function (resolve, reject) {\n      Threads.findOne(thread_id, { projection: projection }, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n\n        docs.replies.sort(function (a, b) {\n          return new Date(b.created_on) - new Date(a.created_on);\n        });\n\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var pushReply = function pushReply(query, update) {\n    return new Promise(function (resolve, reject) {\n      Threads.updateOne(query, update, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        docs = docs.result.nModified;\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var addThread = function addThread(new_thread) {\n    return new Promise(function (resolve, reject) {\n      Threads.insertOne(new_thread, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        docs = docs.result.n;\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var updateReported = function updateReported(query, update) {\n    return new Promise(function (resolve, reject) {\n      Threads.findOneAndUpdate(query, update, { returnOriginal: false }, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        return resolve({ docs: docs.value, hasError: false });\n      });\n    });\n  };\n\n  var deleteThread = function deleteThread(query) {\n    return new Promise(function (resolve, reject) {\n      Threads.deleteOne(query, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        docs = docs.deletedCount;\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var deleteReply = function deleteReply(query, reply) {\n    return new Promise(function (resolve, reject) {\n\n      Threads.findOne(query, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n\n        var updatedReply = docs.replies.find(function (el) {\n          return el._id.toString() === reply._id;\n        });\n        var password_match = updatedReply.delete_password === reply.delete_password;\n\n        if (password_match) {\n          updatedReply.text = '[deleted]';\n          var update = { $set: { replies: docs.replies } };\n\n          Threads.updateOne(query, update, function (err, docs) {\n            if (err) return reject({ err: err, hasError: true });\n            docs = docs.result.nModified;\n            return resolve({ docs: docs, hasError: false });\n          });\n        } else {\n          return resolve({ docs: 0, hasError: false });\n        }\n      });\n    });\n  };\n\n  app.get('/', function (req, res) {\n    return res.sendFile(process.cwd() + '/views/index.html');\n  });\n\n  app.get('/api/threads/:board', function (req, res) {\n    var board = req.params.board;\n\n    boardThreads(board).then(function (data) {\n      if (!data.threads.length) return res.json({ error: 'request failed' });\n      return res.json(data);\n    });\n  });\n\n  app.get('/api/replies/:board', function (req, res) {\n    var thread_id = { _id: (0, _mongodb.ObjectId)(req.query.thread_id) };\n\n    singleThread(thread_id).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      return res.json(data.docs);\n    });\n  });\n\n  app.post('/api/replies/:board', function (req, res) {\n    var query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n    var update = {\n      $push: {\n        replies: {\n          _id: (0, _mongodb.ObjectId)(),\n          text: req.body.text,\n          created_on: new Date(),\n          delete_password: req.body.delete_password,\n          reported: false\n        }\n      },\n      $set: { bumped_on: new Date() }\n    };\n    var board = req.params.board;\n\n    if (req.query.thread_id) {\n      pushReply(query, update).then(function (result) {\n        if (result.hasError) return res.json({ error: 'request failed' });\n        return res.json(result);\n      });\n    } else {\n      pushReply(query, update).then(function (result) {\n        if (!result.docs) return res.json({ error: 'request failed' });\n        return res.json(result.docs);\n      });\n    }\n  });\n\n  app.post('/api/threads/:board', function (req, res) {\n    var new_thread = new Thread({\n      board: req.params.board,\n      text: req.body.text,\n      created_on: new Date(),\n      bumped_on: new Date(),\n      reported: false,\n      delete_password: req.body.delete_password,\n      replies: []\n    });\n\n    addThread(new_thread).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      return res.json(data.docs);\n    });\n  });\n\n  app.put('/api/threads/:board', function (req, res) {\n    var query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n    var update = { $set: { reported: true } };\n\n    updateReported(query, update).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      if (data.docs.reported) {\n        return res.json({ message: 'Success' });\n      } else {\n        return res.json({ message: 'Failed' });\n      }\n    });\n  });\n\n  app.put('/api/replies/:board', function (req, res) {\n    var query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id), \"replies._id\": (0, _mongodb.ObjectId)(req.body.reply_id) };\n    var update = { $set: { \"replies.$.reported\": true } };\n\n    updateReported(query, update).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      var reported = data.docs.replies.find(function (el) {\n        return el._id.toString() === req.body.reply_id;\n      }).reported;\n      if (reported) {\n        return res.json({ message: 'Success' });\n      } else {\n        return res.json({ message: 'Failed' });\n      }\n    });\n  });\n\n  app.delete('/api/threads/:board', function (req, res) {\n    var query = {};\n    var update = {};\n    var reply = {\n      _id: req.body.reply_id,\n      delete_password: req.body.delete_password\n    };\n\n    if (req.body.reply_id) {\n      query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n\n      deleteReply(query, reply).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        return res.json(data.docs);\n      });\n    } else {\n      query = {\n        _id: (0, _mongodb.ObjectId)(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n\n      deleteThread(query).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        if (data.docs) {\n          res.json({ message: 'Success' });\n        } else {\n          return res.json({ message: 'Incorrect Password' });\n        }\n      });\n    }\n  });\n\n  app.delete('/api/replies/:board', function (req, res) {\n    var query = {};\n    var update = {};\n    var reply = {\n      _id: req.body.reply_id,\n      delete_password: req.body.delete_password\n    };\n\n    if (req.body.reply_id) {\n      query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n\n      deleteReply(query, reply).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        if (data.docs) {\n          return res.json({ message: 'Success' });\n        } else {\n          return res.json({ message: 'Incorrect Password' });\n        }\n      });\n    } else {\n      query = {\n        _id: (0, _mongodb.ObjectId)(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n\n      deleteThread(query).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        return res.json(data.docs);\n      });\n    }\n  });\n\n  app.use(function (req, res) {\n    return res.status(404).type('text').send('Not Found');\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "Thread",
        "require",
        "module",
        "exports",
        "app",
        "db",
        "Threads",
        "collection",
        "boardThreads",
        "board",
        "Promise",
        "resolve",
        "reject",
        "find",
        "sort",
        "project",
        "delete_password",
        "reported",
        "toArray",
        "err",
        "docs",
        "forEach",
        "thread",
        "comments",
        "replies",
        "length",
        "a",
        "b",
        "Date",
        "created_on",
        "slice",
        "threads",
        "pages",
        "Math",
        "floor",
        "singleThread",
        "thread_id",
        "projection",
        "findOne",
        "hasError",
        "pushReply",
        "query",
        "update",
        "updateOne",
        "result",
        "nModified",
        "addThread",
        "new_thread",
        "insertOne",
        "n",
        "updateReported",
        "findOneAndUpdate",
        "returnOriginal",
        "value",
        "deleteThread",
        "deleteOne",
        "deletedCount",
        "deleteReply",
        "reply",
        "updatedReply",
        "el",
        "_id",
        "toString",
        "password_match",
        "text",
        "$set",
        "get",
        "req",
        "res",
        "sendFile",
        "process",
        "cwd",
        "params",
        "then",
        "data",
        "json",
        "error",
        "post",
        "body",
        "$push",
        "bumped_on",
        "put",
        "message",
        "reply_id",
        "delete",
        "use",
        "status",
        "type",
        "send"
      ],
      "mappings": "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",
      "file": "api.js",
      "sourceRoot": "/app/routes",
      "sourcesContent": [
        "import MongoClient, { ObjectId } from 'mongodb';\nconst Thread = require('../models/Thread_Model.js');\n\nmodule.exports = (app, db) => {\n  const Threads = db.collection('threads');\n  \n  \n  const boardThreads = (board) => {\n    return new Promise((resolve, reject) => {\n      Threads\n        .find({ board })\n        .sort([['bumped_on', -1]]) //.limit(10)\n        .project({delete_password: 0, reported: 0, \"replies.delete_password\": 0, \"replies.reported\": 0})\n        .toArray((err, docs) => {\n        if (err) return reject(err);\n        \n        docs.forEach(thread => {\n          thread.comments = thread.replies.length;\n          thread.replies.sort((a,b) => new Date(b.created_on) - new Date(a.created_on));\n          thread.replies = thread.replies.length > 3 ? thread.replies.slice(0, 3) : thread.replies;\n        });\n        \n        return resolve({\n          threads: docs.length > 10 ? docs.slice(0,10) : docs, \n          pages: Math.floor(docs.length / 10 ) + 1\n        });\n      });\n    });\n  };\n  \n  \n  const singleThread = (thread_id) => {\n    const projection = {\n      delete_password: 0, \n      reported: 0, \n      \"replies.delete_password\": 0, \n      \"replies.reported\": 0\n    };\n    \n    return new Promise((resolve, reject) => {\n      Threads.findOne(thread_id, {projection}, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        \n        docs.replies.sort((a,b) => new Date(b.created_on) - new Date(a.created_on));\n        \n        return resolve({ docs, hasError: false});\n      });\n    });\n  };\n  \n  \n  const pushReply = (query, update) => {\n    return new Promise((resolve, reject) => {\n      Threads.updateOne(query, update, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        docs = docs.result.nModified;\n        return resolve({ docs, hasError: false });\n      });\n    });\n  };\n  \n  \n  const addThread = (new_thread) => {\n    return new Promise((resolve, reject) => {\n      Threads.insertOne(new_thread, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        docs = docs.result.n;\n      return resolve({ docs, hasError: false });\n    });\n    });\n  };\n  \n  \n  const updateReported = (query, update) => {\n    return new Promise((resolve, reject) => {\n      Threads.findOneAndUpdate(query, update, {returnOriginal: false}, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        return resolve({ docs: docs.value, hasError: false });\n      });\n    });\n  };\n  \n  \n  const deleteThread = (query) => {\n    return new Promise((resolve, reject) => {\n      Threads.deleteOne(query, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        docs = docs.deletedCount;\n        return resolve({ docs, hasError: false });\n      });\n    });\n  };\n  \n  \n  const deleteReply = (query, reply) => {\n    return new Promise((resolve, reject) => {\n      \n      Threads.findOne(query, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        \n        let updatedReply = docs.replies.find(el => el._id.toString() === reply._id);\n        let password_match = updatedReply.delete_password === reply.delete_password;\n        \n        if (password_match) {\n          updatedReply.text = '[deleted]';\n          let update = { $set: { replies: docs.replies } };\n          \n          Threads.updateOne(query, update, (err, docs) => {\n            if (err) return reject({ err, hasError: true });\n            docs = docs.result.nModified;\n            return resolve({ docs, hasError: false });\n          });\n        } else {\n          return resolve({docs: 0, hasError: false });\n        }\n      });\n    });\n  };\n  \n  app.get('/', (req, res) => res.sendFile(process.cwd() + '/views/index.html'));\n  \n  \n  app.get('/api/threads/:board', (req, res) => {\n    const board = req.params.board;\n    \n    boardThreads(board)\n      .then(data => {\n        if (!data.threads.length) return res.json({error: 'request failed'});\n        return res.json(data);\n      });\n  });\n  \n  \n  app.get('/api/replies/:board', (req, res) => {\n    const thread_id = { _id: ObjectId(req.query.thread_id) };\n    \n    singleThread(thread_id)\n      .then(data => {\n        if (data.hasError) return res.json({error: 'request failed'});\n        return res.json(data.docs);\n      });\n  });\n  \n  \n  app.post('/api/replies/:board', (req, res) => {\n    let query = { _id: ObjectId(req.body.thread_id) };\n    let update = {\n      $push: { \n        replies: {\n          _id: ObjectId(),\n          text: req.body.text,\n          created_on: new Date(),\n          delete_password: req.body.delete_password,\n          reported: false\n        }\n      },\n      $set:  { bumped_on: new Date() }\n    };\n    const board = req.params.board;\n    \n    if (req.query.thread_id) {\n      pushReply(query, update)\n        .then(result => {\n          if (result.hasError) return res.json({error: 'request failed'});\n          return res.json(result);\n        });\n    } else {\n      pushReply(query, update)\n        .then(result => {\n          if (!result.docs) return res.json({error: 'request failed'});\n          return res.json(result.docs);\n        });\n    }\n    \n  });\n    \n    \n  app.post('/api/threads/:board', (req, res) => {\n    let new_thread = new Thread({\n      board: req.params.board,\n      text:  req.body.text,\n      created_on: new Date(),\n      bumped_on: new Date(),\n      reported: false,\n      delete_password: req.body.delete_password,\n      replies: []\n    });\n    \n    addThread(new_thread)\n      .then(data => {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        return res.json(data.docs);\n      });\n  });\n  \n  \n  app.put('/api/threads/:board', (req, res) => {\n    let query = {_id: ObjectId(req.body.thread_id)};\n    let update = {$set: {reported: true}};\n    \n    updateReported(query, update)\n      .then(data => {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        if (data.docs.reported) {\n          return res.json({message: 'Success'});\n        } else {\n          return res.json({message: 'Failed'});\n        }\n      });\n  });\n  \n  app.put('/api/replies/:board', (req, res) => {\n    let query = {_id: ObjectId(req.body.thread_id), \"replies._id\": ObjectId(req.body.reply_id)};\n    let update = {$set: {\"replies.$.reported\": true}};\n    \n    updateReported(query, update)\n      .then(data => {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        let reported = data.docs.replies.find(el => el._id.toString() === req.body.reply_id).reported;\n        if (reported) {\n          return res.json({message: 'Success'});\n        } else {\n          return res.json({message: 'Failed'});\n        }\n      });\n  });\n  \n  \n  app.delete('/api/threads/:board', (req, res) => {    \n    let query = {};\n    let update = {};\n    let reply = {\n      _id: req.body.reply_id, \n      delete_password: req.body.delete_password\n    };\n    \n    if (req.body.reply_id) {\n      query = { _id: ObjectId(req.body.thread_id) };\n      \n      deleteReply(query, reply)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          return res.json(data.docs);\n        });\n    } else {\n      query = {\n        _id: ObjectId(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n      \n      deleteThread(query)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          if (data.docs) {\n            res.json({message: 'Success'});\n          } else {\n            return res.json({message: 'Incorrect Password'});\n          }\n        });\n    }\n  });\n  \n  app.delete('/api/replies/:board', (req, res) => {        \n    let query = {};\n    let update = {};\n    let reply = {\n      _id: req.body.reply_id, \n      delete_password: req.body.delete_password\n    };\n    \n    if (req.body.reply_id) {\n      query = { _id: ObjectId(req.body.thread_id) };\n      \n      deleteReply(query, reply)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          if (data.docs) {\n            return res.json({message: 'Success'});\n          } else {\n            return res.json({message: 'Incorrect Password'});\n          }\n        });\n    } else {\n      query = {\n        _id: ObjectId(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n      \n      deleteThread(query)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          return res.json(data.docs);\n        });\n    }\n  });\n  \n  \n  app.use((req, res) => res.status(404).type('text').send('Not Found'));\n};"
      ]
    },
    "mtime": 1549143079000
  },
  "{\"filename\":\"/app/routes/fcctesting.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/routes/fcctesting.js",
      "filenameRelative": "/app/routes/fcctesting.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "fcctesting.js",
      "sourceFileName": "fcctesting.js",
      "sourceRoot": "/app/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "fcctesting"
    },
    "ignored": false,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nvar cors = require('cors');\nvar fs = require('fs');\nvar runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n  app.route('/_api/routes/api.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/routes/api.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.route('/_api/controllers/convertHandler.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n\n  var error;\n  app.get('/_api/get-tests', cors(), function (req, res, next) {\n    console.log(error);\n    if (!error && process.env.NODE_ENV === 'test') return next();\n    res.json({ status: 'unavailable' });\n  }, function (req, res, next) {\n    if (!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  }, function (req, res) {\n    runner.on('done', function (report) {\n      process.nextTick(function () {\n        return res.json(testFilter(runner.report, req.query.type, req.query.n));\n      });\n    });\n  });\n  app.get('/_api/app-info', function (req, res) {\n    var hs = Object.keys(res._headers).filter(function (h) {\n      return !h.match(/^access-control-\\w+/);\n    });\n    var hObj = {};\n    hs.forEach(function (h) {\n      hObj[h] = res._headers[h];\n    });\n    delete res._headers['strict-transport-security'];\n    res.json({ headers: hObj });\n  });\n};\n\nfunction testFilter(tests, type, n) {\n  var out;\n  switch (type) {\n    case 'unit':\n      out = tests.filter(function (t) {\n        return t.context.match('Unit Tests');\n      });\n      break;\n    case 'functional':\n      out = tests.filter(function (t) {\n        return t.context.match('Functional Tests') && !t.title.match('#example');\n      });\n      break;\n    default:\n      out = tests;\n  }\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZjY3Rlc3RpbmcuanMiXSwibmFtZXMiOlsiY29ycyIsInJlcXVpcmUiLCJmcyIsInJ1bm5lciIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJyb3V0ZSIsImdldCIsInJlcSIsInJlcyIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwicmVhZEZpbGUiLCJfX2Rpcm5hbWUiLCJlcnIiLCJkYXRhIiwic2VuZCIsInRvU3RyaW5nIiwidHlwZSIsImVycm9yIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwianNvbiIsInN0YXR1cyIsInJlcG9ydCIsInRlc3RGaWx0ZXIiLCJxdWVyeSIsIm4iLCJvbiIsIm5leHRUaWNrIiwiaHMiLCJPYmplY3QiLCJrZXlzIiwiX2hlYWRlcnMiLCJmaWx0ZXIiLCJoIiwibWF0Y2giLCJoT2JqIiwiZm9yRWFjaCIsImhlYWRlcnMiLCJ0ZXN0cyIsIm91dCIsInQiLCJjb250ZXh0IiwidGl0bGUiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkE7O0FBRUEsSUFBSUEsT0FBT0MsUUFBUSxNQUFSLENBQVg7QUFDQSxJQUFJQyxLQUFLRCxRQUFRLElBQVIsQ0FBVDtBQUNBLElBQUlFLFNBQVNGLFFBQVEsZ0JBQVIsQ0FBYjs7QUFFQUcsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWU7O0FBRTlCQSxNQUFJQyxLQUFKLENBQVUsaUJBQVYsRUFDR0MsR0FESCxDQUNPLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDNUJDLFlBQVFDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FYLE9BQUdZLFFBQUgsQ0FBWUMsWUFBWSxZQUF4QixFQUFzQyxVQUFTQyxHQUFULEVBQWNDLElBQWQsRUFBb0I7QUFDeEQsVUFBR0QsR0FBSCxFQUFRLE9BQU9MLEtBQUtLLEdBQUwsQ0FBUDtBQUNSTixVQUFJUSxJQUFKLENBQVNELEtBQUtFLFFBQUwsRUFBVDtBQUNELEtBSEQ7QUFJRCxHQVBIO0FBUUFiLE1BQUlDLEtBQUosQ0FBVSxxQkFBVixFQUNHQyxHQURILENBQ08sVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUM1QkMsWUFBUUMsR0FBUixDQUFZLFdBQVo7QUFDQVgsT0FBR1ksUUFBSCxDQUFZQyxZQUFZLGdCQUF4QixFQUEwQyxVQUFTQyxHQUFULEVBQWNDLElBQWQsRUFBb0I7QUFDNUQsVUFBR0QsR0FBSCxFQUFRLE9BQU9MLEtBQUtLLEdBQUwsQ0FBUDtBQUNSTixVQUFJVSxJQUFKLENBQVMsS0FBVCxFQUFnQkYsSUFBaEIsQ0FBcUJELEtBQUtFLFFBQUwsRUFBckI7QUFDRCxLQUhEO0FBSUQsR0FQSDtBQVFBYixNQUFJQyxLQUFKLENBQVUscUNBQVYsRUFDR0MsR0FESCxDQUNPLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDNUJDLFlBQVFDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FYLE9BQUdZLFFBQUgsQ0FBWUMsWUFBWSxnQ0FBeEIsRUFBMEQsVUFBU0MsR0FBVCxFQUFjQyxJQUFkLEVBQW9CO0FBQzVFLFVBQUdELEdBQUgsRUFBUSxPQUFPTCxLQUFLSyxHQUFMLENBQVA7QUFDUk4sVUFBSVUsSUFBSixDQUFTLEtBQVQsRUFBZ0JGLElBQWhCLENBQXFCRCxLQUFLRSxRQUFMLEVBQXJCO0FBQ0QsS0FIRDtBQUlELEdBUEg7O0FBU0EsTUFBSUUsS0FBSjtBQUNBZixNQUFJRSxHQUFKLENBQVEsaUJBQVIsRUFBMkJSLE1BQTNCLEVBQW1DLFVBQVNTLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBd0I7QUFDekRDLFlBQVFDLEdBQVIsQ0FBWVEsS0FBWjtBQUNBLFFBQUcsQ0FBQ0EsS0FBRCxJQUFVQyxRQUFRQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsTUFBdEMsRUFBOEMsT0FBT2IsTUFBUDtBQUM5Q0QsUUFBSWUsSUFBSixDQUFTLEVBQUNDLFFBQVEsYUFBVCxFQUFUO0FBQ0QsR0FKRCxFQUtBLFVBQVNqQixHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXdCO0FBQ3RCLFFBQUcsQ0FBQ1IsT0FBT3dCLE1BQVgsRUFBbUIsT0FBT2hCLE1BQVA7QUFDbkJELFFBQUllLElBQUosQ0FBU0csV0FBV3pCLE9BQU93QixNQUFsQixFQUEwQmxCLElBQUlvQixLQUFKLENBQVVULElBQXBDLEVBQTBDWCxJQUFJb0IsS0FBSixDQUFVQyxDQUFwRCxDQUFUO0FBQ0QsR0FSRCxFQVNBLFVBQVNyQixHQUFULEVBQWNDLEdBQWQsRUFBa0I7QUFDaEJQLFdBQU80QixFQUFQLENBQVUsTUFBVixFQUFrQixVQUFTSixNQUFULEVBQWdCO0FBQ2hDTCxjQUFRVSxRQUFSLENBQWlCO0FBQUEsZUFBT3RCLElBQUllLElBQUosQ0FBU0csV0FBV3pCLE9BQU93QixNQUFsQixFQUEwQmxCLElBQUlvQixLQUFKLENBQVVULElBQXBDLEVBQTBDWCxJQUFJb0IsS0FBSixDQUFVQyxDQUFwRCxDQUFULENBQVA7QUFBQSxPQUFqQjtBQUNELEtBRkQ7QUFHRCxHQWJEO0FBY0F4QixNQUFJRSxHQUFKLENBQVEsZ0JBQVIsRUFBMEIsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CO0FBQzNDLFFBQUl1QixLQUFLQyxPQUFPQyxJQUFQLENBQVl6QixJQUFJMEIsUUFBaEIsRUFDTkMsTUFETSxDQUNDO0FBQUEsYUFBSyxDQUFDQyxFQUFFQyxLQUFGLENBQVEscUJBQVIsQ0FBTjtBQUFBLEtBREQsQ0FBVDtBQUVBLFFBQUlDLE9BQU8sRUFBWDtBQUNBUCxPQUFHUSxPQUFILENBQVcsYUFBSztBQUFDRCxXQUFLRixDQUFMLElBQVU1QixJQUFJMEIsUUFBSixDQUFhRSxDQUFiLENBQVY7QUFBMEIsS0FBM0M7QUFDQSxXQUFPNUIsSUFBSTBCLFFBQUosQ0FBYSwyQkFBYixDQUFQO0FBQ0ExQixRQUFJZSxJQUFKLENBQVMsRUFBQ2lCLFNBQVNGLElBQVYsRUFBVDtBQUNELEdBUEQ7QUFTRCxDQW5ERDs7QUFxREEsU0FBU1osVUFBVCxDQUFvQmUsS0FBcEIsRUFBMkJ2QixJQUEzQixFQUFpQ1UsQ0FBakMsRUFBb0M7QUFDbEMsTUFBSWMsR0FBSjtBQUNBLFVBQVF4QixJQUFSO0FBQ0UsU0FBSyxNQUFMO0FBQ0V3QixZQUFNRCxNQUFNTixNQUFOLENBQWE7QUFBQSxlQUFLUSxFQUFFQyxPQUFGLENBQVVQLEtBQVYsQ0FBZ0IsWUFBaEIsQ0FBTDtBQUFBLE9BQWIsQ0FBTjtBQUNBO0FBQ0YsU0FBSyxZQUFMO0FBQ0VLLFlBQU1ELE1BQU1OLE1BQU4sQ0FBYTtBQUFBLGVBQUtRLEVBQUVDLE9BQUYsQ0FBVVAsS0FBVixDQUFnQixrQkFBaEIsS0FBdUMsQ0FBQ00sRUFBRUUsS0FBRixDQUFRUixLQUFSLENBQWMsVUFBZCxDQUE3QztBQUFBLE9BQWIsQ0FBTjtBQUNBO0FBQ0Y7QUFDRUssWUFBTUQsS0FBTjtBQVJKO0FBVUEsTUFBR2IsTUFBTWtCLFNBQVQsRUFBb0I7QUFDbEIsV0FBT0osSUFBSWQsQ0FBSixLQUFVYyxHQUFqQjtBQUNEO0FBQ0QsU0FBT0EsR0FBUDtBQUNEIiwiZmlsZSI6ImZjY3Rlc3RpbmcuanMiLCJzb3VyY2VSb290IjoiL2FwcC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKiAgICAgICBETyBOT1QgRURJVCBUSElTIEZJTEVcbiogICAgICAgRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzIVxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG52YXIgcnVubmVyID0gcmVxdWlyZSgnLi4vdGVzdC1ydW5uZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXBwKSB7XG5cbiAgYXBwLnJvdXRlKCcvX2FwaS9zZXJ2ZXIuanMnKVxuICAgIC5nZXQoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdyZXF1ZXN0ZWQnKTtcbiAgICAgIGZzLnJlYWRGaWxlKF9fZGlybmFtZSArICcvc2VydmVyLmpzJywgZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgICAgIGlmKGVycikgcmV0dXJuIG5leHQoZXJyKTtcbiAgICAgICAgcmVzLnNlbmQoZGF0YS50b1N0cmluZygpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICBhcHAucm91dGUoJy9fYXBpL3JvdXRlcy9hcGkuanMnKVxuICAgIC5nZXQoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdyZXF1ZXN0ZWQnKTtcbiAgICAgIGZzLnJlYWRGaWxlKF9fZGlybmFtZSArICcvcm91dGVzL2FwaS5qcycsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBpZihlcnIpIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgIHJlcy50eXBlKCd0eHQnKS5zZW5kKGRhdGEudG9TdHJpbmcoKSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgYXBwLnJvdXRlKCcvX2FwaS9jb250cm9sbGVycy9jb252ZXJ0SGFuZGxlci5qcycpXG4gICAgLmdldChmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgY29uc29sZS5sb2coJ3JlcXVlc3RlZCcpO1xuICAgICAgZnMucmVhZEZpbGUoX19kaXJuYW1lICsgJy9jb250cm9sbGVycy9jb252ZXJ0SGFuZGxlci5qcycsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBpZihlcnIpIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgIHJlcy50eXBlKCd0eHQnKS5zZW5kKGRhdGEudG9TdHJpbmcoKSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBcbiAgdmFyIGVycm9yO1xuICBhcHAuZ2V0KCcvX2FwaS9nZXQtdGVzdHMnLCBjb3JzKCksIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KXtcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgaWYoIWVycm9yICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcpIHJldHVybiBuZXh0KCk7XG4gICAgcmVzLmpzb24oe3N0YXR1czogJ3VuYXZhaWxhYmxlJ30pO1xuICB9LFxuICBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCl7XG4gICAgaWYoIXJ1bm5lci5yZXBvcnQpIHJldHVybiBuZXh0KCk7XG4gICAgcmVzLmpzb24odGVzdEZpbHRlcihydW5uZXIucmVwb3J0LCByZXEucXVlcnkudHlwZSwgcmVxLnF1ZXJ5Lm4pKTtcbiAgfSxcbiAgZnVuY3Rpb24ocmVxLCByZXMpe1xuICAgIHJ1bm5lci5vbignZG9uZScsIGZ1bmN0aW9uKHJlcG9ydCl7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKCgpID0+ICByZXMuanNvbih0ZXN0RmlsdGVyKHJ1bm5lci5yZXBvcnQsIHJlcS5xdWVyeS50eXBlLCByZXEucXVlcnkubikpKTtcbiAgICB9KTtcbiAgfSk7XG4gIGFwcC5nZXQoJy9fYXBpL2FwcC1pbmZvJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICB2YXIgaHMgPSBPYmplY3Qua2V5cyhyZXMuX2hlYWRlcnMpXG4gICAgICAuZmlsdGVyKGggPT4gIWgubWF0Y2goL15hY2Nlc3MtY29udHJvbC1cXHcrLykpO1xuICAgIHZhciBoT2JqID0ge307XG4gICAgaHMuZm9yRWFjaChoID0+IHtoT2JqW2hdID0gcmVzLl9oZWFkZXJzW2hdfSk7XG4gICAgZGVsZXRlIHJlcy5faGVhZGVyc1snc3RyaWN0LXRyYW5zcG9ydC1zZWN1cml0eSddO1xuICAgIHJlcy5qc29uKHtoZWFkZXJzOiBoT2JqfSk7XG4gIH0pO1xuICBcbn07XG5cbmZ1bmN0aW9uIHRlc3RGaWx0ZXIodGVzdHMsIHR5cGUsIG4pIHtcbiAgdmFyIG91dDtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAndW5pdCcgOlxuICAgICAgb3V0ID0gdGVzdHMuZmlsdGVyKHQgPT4gdC5jb250ZXh0Lm1hdGNoKCdVbml0IFRlc3RzJykpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZnVuY3Rpb25hbCc6XG4gICAgICBvdXQgPSB0ZXN0cy5maWx0ZXIodCA9PiB0LmNvbnRleHQubWF0Y2goJ0Z1bmN0aW9uYWwgVGVzdHMnKSAmJiAhdC50aXRsZS5tYXRjaCgnI2V4YW1wbGUnKSk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgb3V0ID0gdGVzdHM7XG4gIH1cbiAgaWYobiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIG91dFtuXSB8fCBvdXQ7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "fcctesting.js"
      ],
      "names": [
        "cors",
        "require",
        "fs",
        "runner",
        "module",
        "exports",
        "app",
        "route",
        "get",
        "req",
        "res",
        "next",
        "console",
        "log",
        "readFile",
        "__dirname",
        "err",
        "data",
        "send",
        "toString",
        "type",
        "error",
        "process",
        "env",
        "NODE_ENV",
        "json",
        "status",
        "report",
        "testFilter",
        "query",
        "n",
        "on",
        "nextTick",
        "hs",
        "Object",
        "keys",
        "_headers",
        "filter",
        "h",
        "match",
        "hObj",
        "forEach",
        "headers",
        "tests",
        "out",
        "t",
        "context",
        "title",
        "undefined"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,SAASF,QAAQ,gBAAR,CAAb;;AAEAG,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAAe;;AAE9BA,MAAIC,KAAJ,CAAU,iBAAV,EACGC,GADH,CACO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5BC,YAAQC,GAAR,CAAY,WAAZ;AACAX,OAAGY,QAAH,CAAYC,YAAY,YAAxB,EAAsC,UAASC,GAAT,EAAcC,IAAd,EAAoB;AACxD,UAAGD,GAAH,EAAQ,OAAOL,KAAKK,GAAL,CAAP;AACRN,UAAIQ,IAAJ,CAASD,KAAKE,QAAL,EAAT;AACD,KAHD;AAID,GAPH;AAQAb,MAAIC,KAAJ,CAAU,qBAAV,EACGC,GADH,CACO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5BC,YAAQC,GAAR,CAAY,WAAZ;AACAX,OAAGY,QAAH,CAAYC,YAAY,gBAAxB,EAA0C,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAC5D,UAAGD,GAAH,EAAQ,OAAOL,KAAKK,GAAL,CAAP;AACRN,UAAIU,IAAJ,CAAS,KAAT,EAAgBF,IAAhB,CAAqBD,KAAKE,QAAL,EAArB;AACD,KAHD;AAID,GAPH;AAQAb,MAAIC,KAAJ,CAAU,qCAAV,EACGC,GADH,CACO,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC5BC,YAAQC,GAAR,CAAY,WAAZ;AACAX,OAAGY,QAAH,CAAYC,YAAY,gCAAxB,EAA0D,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAC5E,UAAGD,GAAH,EAAQ,OAAOL,KAAKK,GAAL,CAAP;AACRN,UAAIU,IAAJ,CAAS,KAAT,EAAgBF,IAAhB,CAAqBD,KAAKE,QAAL,EAArB;AACD,KAHD;AAID,GAPH;;AASA,MAAIE,KAAJ;AACAf,MAAIE,GAAJ,CAAQ,iBAAR,EAA2BR,MAA3B,EAAmC,UAASS,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACzDC,YAAQC,GAAR,CAAYQ,KAAZ;AACA,QAAG,CAACA,KAAD,IAAUC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,MAAtC,EAA8C,OAAOb,MAAP;AAC9CD,QAAIe,IAAJ,CAAS,EAACC,QAAQ,aAAT,EAAT;AACD,GAJD,EAKA,UAASjB,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACtB,QAAG,CAACR,OAAOwB,MAAX,EAAmB,OAAOhB,MAAP;AACnBD,QAAIe,IAAJ,CAASG,WAAWzB,OAAOwB,MAAlB,EAA0BlB,IAAIoB,KAAJ,CAAUT,IAApC,EAA0CX,IAAIoB,KAAJ,CAAUC,CAApD,CAAT;AACD,GARD,EASA,UAASrB,GAAT,EAAcC,GAAd,EAAkB;AAChBP,WAAO4B,EAAP,CAAU,MAAV,EAAkB,UAASJ,MAAT,EAAgB;AAChCL,cAAQU,QAAR,CAAiB;AAAA,eAAOtB,IAAIe,IAAJ,CAASG,WAAWzB,OAAOwB,MAAlB,EAA0BlB,IAAIoB,KAAJ,CAAUT,IAApC,EAA0CX,IAAIoB,KAAJ,CAAUC,CAApD,CAAT,CAAP;AAAA,OAAjB;AACD,KAFD;AAGD,GAbD;AAcAxB,MAAIE,GAAJ,CAAQ,gBAAR,EAA0B,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC3C,QAAIuB,KAAKC,OAAOC,IAAP,CAAYzB,IAAI0B,QAAhB,EACNC,MADM,CACC;AAAA,aAAK,CAACC,EAAEC,KAAF,CAAQ,qBAAR,CAAN;AAAA,KADD,CAAT;AAEA,QAAIC,OAAO,EAAX;AACAP,OAAGQ,OAAH,CAAW,aAAK;AAACD,WAAKF,CAAL,IAAU5B,IAAI0B,QAAJ,CAAaE,CAAb,CAAV;AAA0B,KAA3C;AACA,WAAO5B,IAAI0B,QAAJ,CAAa,2BAAb,CAAP;AACA1B,QAAIe,IAAJ,CAAS,EAACiB,SAASF,IAAV,EAAT;AACD,GAPD;AASD,CAnDD;;AAqDA,SAASZ,UAAT,CAAoBe,KAApB,EAA2BvB,IAA3B,EAAiCU,CAAjC,EAAoC;AAClC,MAAIc,GAAJ;AACA,UAAQxB,IAAR;AACE,SAAK,MAAL;AACEwB,YAAMD,MAAMN,MAAN,CAAa;AAAA,eAAKQ,EAAEC,OAAF,CAAUP,KAAV,CAAgB,YAAhB,CAAL;AAAA,OAAb,CAAN;AACA;AACF,SAAK,YAAL;AACEK,YAAMD,MAAMN,MAAN,CAAa;AAAA,eAAKQ,EAAEC,OAAF,CAAUP,KAAV,CAAgB,kBAAhB,KAAuC,CAACM,EAAEE,KAAF,CAAQR,KAAR,CAAc,UAAd,CAA7C;AAAA,OAAb,CAAN;AACA;AACF;AACEK,YAAMD,KAAN;AARJ;AAUA,MAAGb,MAAMkB,SAAT,EAAoB;AAClB,WAAOJ,IAAId,CAAJ,KAAUc,GAAjB;AACD;AACD,SAAOA,GAAP;AACD",
      "file": "fcctesting.js",
      "sourceRoot": "/app/routes",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nvar cors = require('cors');\nvar fs = require('fs');\nvar runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/server.js', function(err, data) {\n        if(err) return next(err);\n        res.send(data.toString());\n      });\n    });\n  app.route('/_api/routes/api.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/routes/api.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n  app.route('/_api/controllers/convertHandler.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n    \n  var error;\n  app.get('/_api/get-tests', cors(), function(req, res, next){\n    console.log(error);\n    if(!error && process.env.NODE_ENV === 'test') return next();\n    res.json({status: 'unavailable'});\n  },\n  function(req, res, next){\n    if(!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  },\n  function(req, res){\n    runner.on('done', function(report){\n      process.nextTick(() =>  res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function(req, res) {\n    var hs = Object.keys(res._headers)\n      .filter(h => !h.match(/^access-control-\\w+/));\n    var hObj = {};\n    hs.forEach(h => {hObj[h] = res._headers[h]});\n    delete res._headers['strict-transport-security'];\n    res.json({headers: hObj});\n  });\n  \n};\n\nfunction testFilter(tests, type, n) {\n  var out;\n  switch (type) {\n    case 'unit' :\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if(n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}"
      ]
    },
    "mtime": 1547499196000
  },
  "{\"filename\":\"/app/test-runner.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/test-runner.js",
      "filenameRelative": "/app/test-runner.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "test-runner.js",
      "sourceFileName": "test-runner.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "test-runner"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nvar analyser = require('./assertion-analyser');\nvar EventEmitter = require('events').EventEmitter;\n\nvar Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n\nvar mocha = new Mocha();\nvar testDir = './tests';\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function (file) {\n  // Only keep the .js files\n  return file.substr(-3) === '.js';\n}).forEach(function (file) {\n  mocha.addFile(path.join(testDir, file));\n});\n\nvar emitter = new EventEmitter();\nemitter.run = function () {\n\n  var tests = [];\n  var context = \"\";\n  var separator = ' -> ';\n  // Run the tests.\n  try {\n    var runner = mocha.ui('tdd').run().on('test end', function (test) {\n      // remove comments\n      var body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n      // collapse spaces\n      body = body.replace(/\\s+/g, ' ');\n      var obj = {\n        title: test.title,\n        context: context.slice(0, -separator.length),\n        state: test.state,\n        // body: body,\n        assertions: analyser(body)\n      };\n      tests.push(obj);\n    }).on('end', function () {\n      emitter.report = tests;\n      emitter.emit('done', tests);\n    }).on('suite', function (s) {\n      context += s.title + separator;\n    }).on('suite end', function (s) {\n      context = context.slice(0, -(s.title.length + separator.length));\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcnVubmVyLmpzIl0sIm5hbWVzIjpbImFuYWx5c2VyIiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsIk1vY2hhIiwiZnMiLCJwYXRoIiwibW9jaGEiLCJ0ZXN0RGlyIiwicmVhZGRpclN5bmMiLCJmaWx0ZXIiLCJmaWxlIiwic3Vic3RyIiwiZm9yRWFjaCIsImFkZEZpbGUiLCJqb2luIiwiZW1pdHRlciIsInJ1biIsInRlc3RzIiwiY29udGV4dCIsInNlcGFyYXRvciIsInJ1bm5lciIsInVpIiwib24iLCJ0ZXN0IiwiYm9keSIsInJlcGxhY2UiLCJvYmoiLCJ0aXRsZSIsInNsaWNlIiwibGVuZ3RoIiwic3RhdGUiLCJhc3NlcnRpb25zIiwicHVzaCIsInJlcG9ydCIsImVtaXQiLCJzIiwiZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQSxJQUFJQSxXQUFXQyxRQUFRLHNCQUFSLENBQWY7QUFDQSxJQUFJQyxlQUFlRCxRQUFRLFFBQVIsRUFBa0JDLFlBQXJDOztBQUVBLElBQUlDLFFBQVFGLFFBQVEsT0FBUixDQUFaO0FBQUEsSUFDSUcsS0FBS0gsUUFBUSxJQUFSLENBRFQ7QUFBQSxJQUVJSSxPQUFPSixRQUFRLE1BQVIsQ0FGWDs7QUFJQSxJQUFJSyxRQUFRLElBQUlILEtBQUosRUFBWjtBQUNBLElBQUlJLFVBQVUsU0FBZDs7QUFHQTtBQUNBSCxHQUFHSSxXQUFILENBQWVELE9BQWYsRUFBd0JFLE1BQXhCLENBQStCLFVBQVNDLElBQVQsRUFBYztBQUN6QztBQUNBLFNBQU9BLEtBQUtDLE1BQUwsQ0FBWSxDQUFDLENBQWIsTUFBb0IsS0FBM0I7QUFFSCxDQUpELEVBSUdDLE9BSkgsQ0FJVyxVQUFTRixJQUFULEVBQWM7QUFDckJKLFFBQU1PLE9BQU4sQ0FDSVIsS0FBS1MsSUFBTCxDQUFVUCxPQUFWLEVBQW1CRyxJQUFuQixDQURKO0FBR0gsQ0FSRDs7QUFVQSxJQUFJSyxVQUFVLElBQUliLFlBQUosRUFBZDtBQUNBYSxRQUFRQyxHQUFSLEdBQWMsWUFBVzs7QUFFdkIsTUFBSUMsUUFBUSxFQUFaO0FBQ0EsTUFBSUMsVUFBVSxFQUFkO0FBQ0EsTUFBSUMsWUFBWSxNQUFoQjtBQUNBO0FBQ0EsTUFBSTtBQUNKLFFBQUlDLFNBQVNkLE1BQU1lLEVBQU4sQ0FBUyxLQUFULEVBQWdCTCxHQUFoQixHQUNWTSxFQURVLENBQ1AsVUFETyxFQUNLLFVBQVNDLElBQVQsRUFBZTtBQUMzQjtBQUNBLFVBQUlDLE9BQU9ELEtBQUtDLElBQUwsQ0FBVUMsT0FBVixDQUFrQixzQkFBbEIsRUFBMEMsRUFBMUMsQ0FBWDtBQUNBO0FBQ0FELGFBQU9BLEtBQUtDLE9BQUwsQ0FBYSxNQUFiLEVBQW9CLEdBQXBCLENBQVA7QUFDQSxVQUFJQyxNQUFNO0FBQ1JDLGVBQU9KLEtBQUtJLEtBREo7QUFFUlQsaUJBQVNBLFFBQVFVLEtBQVIsQ0FBYyxDQUFkLEVBQWlCLENBQUNULFVBQVVVLE1BQTVCLENBRkQ7QUFHUkMsZUFBT1AsS0FBS08sS0FISjtBQUlSO0FBQ0FDLG9CQUFZL0IsU0FBU3dCLElBQVQ7QUFMSixPQUFWO0FBT0FQLFlBQU1lLElBQU4sQ0FBV04sR0FBWDtBQUNILEtBZFUsRUFlVkosRUFmVSxDQWVQLEtBZk8sRUFlQSxZQUFXO0FBQ2xCUCxjQUFRa0IsTUFBUixHQUFpQmhCLEtBQWpCO0FBQ0FGLGNBQVFtQixJQUFSLENBQWEsTUFBYixFQUFxQmpCLEtBQXJCO0FBQ0gsS0FsQlUsRUFtQlZLLEVBbkJVLENBbUJQLE9BbkJPLEVBbUJFLFVBQVNhLENBQVQsRUFBWTtBQUN2QmpCLGlCQUFZaUIsRUFBRVIsS0FBRixHQUFVUixTQUF0QjtBQUVELEtBdEJVLEVBdUJWRyxFQXZCVSxDQXVCUCxXQXZCTyxFQXVCTSxVQUFTYSxDQUFULEVBQVk7QUFDM0JqQixnQkFBVUEsUUFBUVUsS0FBUixDQUFjLENBQWQsRUFBaUIsRUFBRU8sRUFBRVIsS0FBRixDQUFRRSxNQUFSLEdBQWlCVixVQUFVVSxNQUE3QixDQUFqQixDQUFWO0FBQ0QsS0F6QlUsQ0FBYjtBQTBCQyxHQTNCRCxDQTJCRSxPQUFNTyxDQUFOLEVBQVM7QUFDVCxVQUFNQSxDQUFOO0FBQ0Q7QUFDRixDQXBDRDs7QUFzQ0FDLE9BQU9DLE9BQVAsR0FBaUJ2QixPQUFqQjs7QUFFQSIsImZpbGUiOiJ0ZXN0LXJ1bm5lci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiLypcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiogICAgICAgRE8gTk9UIEVESVQgVEhJUyBGSUxFXG4qICAgICAgIEZvciBGQ0MgdGVzdGluZyBwdXJwb3NlcyFcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiovXG5cbnZhciBhbmFseXNlciA9IHJlcXVpcmUoJy4vYXNzZXJ0aW9uLWFuYWx5c2VyJyk7XG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuXG52YXIgTW9jaGEgPSByZXF1aXJlKCdtb2NoYScpLFxuICAgIGZzID0gcmVxdWlyZSgnZnMnKSxcbiAgICBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG52YXIgbW9jaGEgPSBuZXcgTW9jaGEoKTtcbnZhciB0ZXN0RGlyID0gJy4vdGVzdHMnXG5cblxuLy8gQWRkIGVhY2ggLmpzIGZpbGUgdG8gdGhlIG1vY2hhIGluc3RhbmNlXG5mcy5yZWFkZGlyU3luYyh0ZXN0RGlyKS5maWx0ZXIoZnVuY3Rpb24oZmlsZSl7XG4gICAgLy8gT25seSBrZWVwIHRoZSAuanMgZmlsZXNcbiAgICByZXR1cm4gZmlsZS5zdWJzdHIoLTMpID09PSAnLmpzJztcblxufSkuZm9yRWFjaChmdW5jdGlvbihmaWxlKXtcbiAgICBtb2NoYS5hZGRGaWxlKFxuICAgICAgICBwYXRoLmpvaW4odGVzdERpciwgZmlsZSlcbiAgICApO1xufSk7XG5cbnZhciBlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpOyAgXG5lbWl0dGVyLnJ1biA9IGZ1bmN0aW9uKCkge1xuXG4gIHZhciB0ZXN0cyA9IFtdO1xuICB2YXIgY29udGV4dCA9IFwiXCI7XG4gIHZhciBzZXBhcmF0b3IgPSAnIC0+ICc7XG4gIC8vIFJ1biB0aGUgdGVzdHMuXG4gIHRyeSB7XG4gIHZhciBydW5uZXIgPSBtb2NoYS51aSgndGRkJykucnVuKClcbiAgICAub24oJ3Rlc3QgZW5kJywgZnVuY3Rpb24odGVzdCkge1xuICAgICAgICAvLyByZW1vdmUgY29tbWVudHNcbiAgICAgICAgdmFyIGJvZHkgPSB0ZXN0LmJvZHkucmVwbGFjZSgvXFwvXFwvLipcXG58XFwvXFwqLipcXCpcXC8vZywgJycpO1xuICAgICAgICAvLyBjb2xsYXBzZSBzcGFjZXNcbiAgICAgICAgYm9keSA9IGJvZHkucmVwbGFjZSgvXFxzKy9nLCcgJyk7XG4gICAgICAgIHZhciBvYmogPSB7XG4gICAgICAgICAgdGl0bGU6IHRlc3QudGl0bGUsXG4gICAgICAgICAgY29udGV4dDogY29udGV4dC5zbGljZSgwLCAtc2VwYXJhdG9yLmxlbmd0aCksXG4gICAgICAgICAgc3RhdGU6IHRlc3Quc3RhdGUsXG4gICAgICAgICAgLy8gYm9keTogYm9keSxcbiAgICAgICAgICBhc3NlcnRpb25zOiBhbmFseXNlcihib2R5KVxuICAgICAgICB9O1xuICAgICAgICB0ZXN0cy5wdXNoKG9iaik7XG4gICAgfSlcbiAgICAub24oJ2VuZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICBlbWl0dGVyLnJlcG9ydCA9IHRlc3RzO1xuICAgICAgICBlbWl0dGVyLmVtaXQoJ2RvbmUnLCB0ZXN0cylcbiAgICB9KVxuICAgIC5vbignc3VpdGUnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ICs9IChzLnRpdGxlICsgc2VwYXJhdG9yKTtcblxuICAgIH0pXG4gICAgLm9uKCdzdWl0ZSBlbmQnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5zbGljZSgwLCAtKHMudGl0bGUubGVuZ3RoICsgc2VwYXJhdG9yLmxlbmd0aCkpXG4gICAgfSlcbiAgfSBjYXRjaChlKSB7XG4gICAgdGhyb3coZSk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1pdHRlcjtcblxuLypcbiAqIE1vY2hhLnJ1bm5lciBFdmVudHM6XG4gKiBjYW4gYmUgdXNlZCB0byBidWlsZCBhIGJldHRlciBjdXN0b20gcmVwb3J0XG4gKlxuICogICAtIGBzdGFydGAgIGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYGVuZGAgIGV4ZWN1dGlvbiBjb21wbGV0ZVxuICogICAtIGBzdWl0ZWAgIChzdWl0ZSkgdGVzdCBzdWl0ZSBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBzdWl0ZSBlbmRgICAoc3VpdGUpIGFsbCB0ZXN0cyAoYW5kIHN1Yi1zdWl0ZXMpIGhhdmUgZmluaXNoZWRcbiAqICAgLSBgdGVzdGAgICh0ZXN0KSB0ZXN0IGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYHRlc3QgZW5kYCAgKHRlc3QpIHRlc3QgY29tcGxldGVkXG4gKiAgIC0gYGhvb2tgICAoaG9vaykgaG9vayBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBob29rIGVuZGAgIChob29rKSBob29rIGNvbXBsZXRlXG4gKiAgIC0gYHBhc3NgICAodGVzdCkgdGVzdCBwYXNzZWRcbiAqICAgLSBgZmFpbGAgICh0ZXN0LCBlcnIpIHRlc3QgZmFpbGVkXG4gKiAgIC0gYHBlbmRpbmdgICAodGVzdCkgdGVzdCBwZW5kaW5nXG4gKi8iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "test-runner.js"
      ],
      "names": [
        "analyser",
        "require",
        "EventEmitter",
        "Mocha",
        "fs",
        "path",
        "mocha",
        "testDir",
        "readdirSync",
        "filter",
        "file",
        "substr",
        "forEach",
        "addFile",
        "join",
        "emitter",
        "run",
        "tests",
        "context",
        "separator",
        "runner",
        "ui",
        "on",
        "test",
        "body",
        "replace",
        "obj",
        "title",
        "slice",
        "length",
        "state",
        "assertions",
        "push",
        "report",
        "emit",
        "s",
        "e",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAIA,WAAWC,QAAQ,sBAAR,CAAf;AACA,IAAIC,eAAeD,QAAQ,QAAR,EAAkBC,YAArC;;AAEA,IAAIC,QAAQF,QAAQ,OAAR,CAAZ;AAAA,IACIG,KAAKH,QAAQ,IAAR,CADT;AAAA,IAEII,OAAOJ,QAAQ,MAAR,CAFX;;AAIA,IAAIK,QAAQ,IAAIH,KAAJ,EAAZ;AACA,IAAII,UAAU,SAAd;;AAGA;AACAH,GAAGI,WAAH,CAAeD,OAAf,EAAwBE,MAAxB,CAA+B,UAASC,IAAT,EAAc;AACzC;AACA,SAAOA,KAAKC,MAAL,CAAY,CAAC,CAAb,MAAoB,KAA3B;AAEH,CAJD,EAIGC,OAJH,CAIW,UAASF,IAAT,EAAc;AACrBJ,QAAMO,OAAN,CACIR,KAAKS,IAAL,CAAUP,OAAV,EAAmBG,IAAnB,CADJ;AAGH,CARD;;AAUA,IAAIK,UAAU,IAAIb,YAAJ,EAAd;AACAa,QAAQC,GAAR,GAAc,YAAW;;AAEvB,MAAIC,QAAQ,EAAZ;AACA,MAAIC,UAAU,EAAd;AACA,MAAIC,YAAY,MAAhB;AACA;AACA,MAAI;AACJ,QAAIC,SAASd,MAAMe,EAAN,CAAS,KAAT,EAAgBL,GAAhB,GACVM,EADU,CACP,UADO,EACK,UAASC,IAAT,EAAe;AAC3B;AACA,UAAIC,OAAOD,KAAKC,IAAL,CAAUC,OAAV,CAAkB,sBAAlB,EAA0C,EAA1C,CAAX;AACA;AACAD,aAAOA,KAAKC,OAAL,CAAa,MAAb,EAAoB,GAApB,CAAP;AACA,UAAIC,MAAM;AACRC,eAAOJ,KAAKI,KADJ;AAERT,iBAASA,QAAQU,KAAR,CAAc,CAAd,EAAiB,CAACT,UAAUU,MAA5B,CAFD;AAGRC,eAAOP,KAAKO,KAHJ;AAIR;AACAC,oBAAY/B,SAASwB,IAAT;AALJ,OAAV;AAOAP,YAAMe,IAAN,CAAWN,GAAX;AACH,KAdU,EAeVJ,EAfU,CAeP,KAfO,EAeA,YAAW;AAClBP,cAAQkB,MAAR,GAAiBhB,KAAjB;AACAF,cAAQmB,IAAR,CAAa,MAAb,EAAqBjB,KAArB;AACH,KAlBU,EAmBVK,EAnBU,CAmBP,OAnBO,EAmBE,UAASa,CAAT,EAAY;AACvBjB,iBAAYiB,EAAER,KAAF,GAAUR,SAAtB;AAED,KAtBU,EAuBVG,EAvBU,CAuBP,WAvBO,EAuBM,UAASa,CAAT,EAAY;AAC3BjB,gBAAUA,QAAQU,KAAR,CAAc,CAAd,EAAiB,EAAEO,EAAER,KAAF,CAAQE,MAAR,GAAiBV,UAAUU,MAA7B,CAAjB,CAAV;AACD,KAzBU,CAAb;AA0BC,GA3BD,CA2BE,OAAMO,CAAN,EAAS;AACT,UAAMA,CAAN;AACD;AACF,CApCD;;AAsCAC,OAAOC,OAAP,GAAiBvB,OAAjB;;AAEA",
      "file": "test-runner.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nvar analyser = require('./assertion-analyser');\nvar EventEmitter = require('events').EventEmitter;\n\nvar Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n\nvar mocha = new Mocha();\nvar testDir = './tests'\n\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function(file){\n    // Only keep the .js files\n    return file.substr(-3) === '.js';\n\n}).forEach(function(file){\n    mocha.addFile(\n        path.join(testDir, file)\n    );\n});\n\nvar emitter = new EventEmitter();  \nemitter.run = function() {\n\n  var tests = [];\n  var context = \"\";\n  var separator = ' -> ';\n  // Run the tests.\n  try {\n  var runner = mocha.ui('tdd').run()\n    .on('test end', function(test) {\n        // remove comments\n        var body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n        // collapse spaces\n        body = body.replace(/\\s+/g,' ');\n        var obj = {\n          title: test.title,\n          context: context.slice(0, -separator.length),\n          state: test.state,\n          // body: body,\n          assertions: analyser(body)\n        };\n        tests.push(obj);\n    })\n    .on('end', function() {\n        emitter.report = tests;\n        emitter.emit('done', tests)\n    })\n    .on('suite', function(s) {\n      context += (s.title + separator);\n\n    })\n    .on('suite end', function(s) {\n      context = context.slice(0, -(s.title.length + separator.length))\n    })\n  } catch(e) {\n    throw(e);\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */"
      ]
    },
    "mtime": 1547499154000
  },
  "{\"filename\":\"/app/assertion-analyser.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/assertion-analyser.js",
      "filenameRelative": "/app/assertion-analyser.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "assertion-analyser.js",
      "sourceFileName": "assertion-analyser.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "assertion-analyser"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  var openSym = ['[', '{', '\"', \"'\", '('];\n  var closeSym = [']', '}', '\"', \"'\", ')'];\n  var type;\n  for (var i = init || 0; i < str.length; i++) {\n    type = openSym.indexOf(str[i]);\n    if (type !== -1) break;\n  }\n  if (type === -1) return null;\n  var open = openSym[type];\n  var close = closeSym[type];\n  var count = 1;\n  for (var k = i + 1; k < str.length; k++) {\n    if (open === '\"' || open === \"'\") {\n      if (str[k] === close) count--;\n      if (str[k] === '\\\\') k++;\n    } else {\n      if (str[k] === open) count++;\n      if (str[k] === close) count--;\n    }\n    if (count === 0) break;\n  }\n  if (count !== 0) return null;\n  var obj = str.slice(i, k + 1);\n  return {\n    start: i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  var obj;\n  var cnt = 0;\n  var data = [];\n  while (obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end + 1);\n  }\n  return {\n    str: str,\n    dictionary: data\n  };\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  var strObj = replacer(str);\n  var args = strObj.str.split(',');\n  args = args.map(function (a) {\n    var m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  });\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n\n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n\n  if (!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  var body = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)[0];\n  var s = replacer(body);\n  // split on 'assertion'\n  var splittedAssertions = s.str.split('assert');\n  var assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  var assertionBodies = [];\n  var methods = assertions.map(function (a, i) {\n    var m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    var pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if (methods.some(function (m) {\n    return !m;\n  })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  var bodies = assertionBodies.map(function (b) {\n    return s.dictionary[b].slice(1, -1).trim();\n  });\n  assertions = methods.map(function (m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    };\n  });\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "assertion-analyser.js"
      ],
      "names": [
        "objParser",
        "str",
        "init",
        "openSym",
        "closeSym",
        "type",
        "i",
        "length",
        "indexOf",
        "open",
        "close",
        "count",
        "k",
        "obj",
        "slice",
        "start",
        "end",
        "replacer",
        "cnt",
        "data",
        "substring",
        "dictionary",
        "splitter",
        "strObj",
        "args",
        "split",
        "map",
        "a",
        "m",
        "match",
        "replace",
        "trim",
        "assertionAnalyser",
        "body",
        "s",
        "splittedAssertions",
        "assertions",
        "assertionBodies",
        "methods",
        "push",
        "parseInt",
        "pre",
        "some",
        "bodies",
        "b",
        "method",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "assertion-analyser.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  var openSym = ['[', '{', '\"', \"'\", '('];\n  var closeSym = [']', '}', '\"', \"'\", ')'];\n  var type;\n  for(var i = (init || 0); i < str.length; i++ ) {\n    type = openSym.indexOf(str[i]);\n    if( type !== -1)  break;\n  }\n  if (type === -1) return null;\n  var open = openSym[type];\n  var close = closeSym[type];\n  var count = 1;\n  for(var k = i+1; k < str.length; k++) {\n    if(open === '\"' || open === \"'\") {\n      if(str[k] === close) count--;\n      if(str[k] === '\\\\') k++;\n    } else {\n      if(str[k] === open) count++;\n      if(str[k] === close) count--;\n    }\n    if(count === 0) break;\n  }\n  if(count !== 0) return null;\n  var obj = str.slice(i, k+1);\n  return {\n    start : i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  var obj;\n  var cnt = 0;\n  var data = [];\n  while(obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end+1)\n  }\n  return {\n    str : str,\n    dictionary : data\n  }\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  var strObj = replacer(str);\n  var args = strObj.str.split(',');\n  args = args.map(function(a){\n    var m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  })\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  \n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  \n  if(!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  var body = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)[0];\n  var s = replacer(body);\n  // split on 'assertion'\n  var splittedAssertions = s.str.split('assert');\n  var assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  var assertionBodies = [];\n  var methods = assertions.map(function(a, i){\n    var m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    var pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if(methods.some(function(m){ return !m })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  var bodies = assertionBodies.map(function(b){\n    return s.dictionary[b].slice(1,-1).trim();\n  });\n  assertions = methods.map(function(m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    }\n  })\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n"
      ]
    },
    "mtime": 1547499168000
  },
  "{\"filename\":\"/app/models/Thread_Model.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/models/Thread_Model.js",
      "filenameRelative": "/app/models/Thread_Model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "Thread_Model.js",
      "sourceFileName": "Thread_Model.js",
      "sourceRoot": "/app/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "Thread_Model"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose');\nvar ObjectId = mongoose.Schema.Types.ObjectId;\n\nvar Thread = new mongoose.Schema({\n  board: { type: String, required: true },\n  text: { type: String, required: true },\n  created_on: { type: Date, default: Date.now },\n  bumped_on: { type: Date, default: Date.now },\n  reported: { type: Boolean },\n  delete_password: { type: String, required: true },\n  replies: [{\n    _id: { type: ObjectId },\n    text: { type: String, required: true },\n    created_on: { type: Date, default: Date.now },\n    delete_password: { type: String, required: true },\n    reported: { type: Boolean }\n  }],\n  views: [{ ip: String }]\n});\n\nmodule.exports = mongoose.model('Thread', Thread);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRocmVhZF9Nb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJPYmplY3RJZCIsIlNjaGVtYSIsIlR5cGVzIiwiVGhyZWFkIiwiYm9hcmQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ0ZXh0IiwiY3JlYXRlZF9vbiIsIkRhdGUiLCJkZWZhdWx0Iiwibm93IiwiYnVtcGVkX29uIiwicmVwb3J0ZWQiLCJCb29sZWFuIiwiZGVsZXRlX3Bhc3N3b3JkIiwicmVwbGllcyIsIl9pZCIsInZpZXdzIiwiaXAiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsV0FBV0MsUUFBUSxVQUFSLENBQWpCO0FBQ0EsSUFBTUMsV0FBV0YsU0FBU0csTUFBVCxDQUFnQkMsS0FBaEIsQ0FBc0JGLFFBQXZDOztBQUVBLElBQU1HLFNBQVMsSUFBSUwsU0FBU0csTUFBYixDQUFvQjtBQUNqQ0csU0FBTyxFQUFFQyxNQUFNQyxNQUFSLEVBQWdCQyxVQUFVLElBQTFCLEVBRDBCO0FBRWpDQyxRQUFPLEVBQUVILE1BQU1DLE1BQVIsRUFBZ0JDLFVBQVUsSUFBMUIsRUFGMEI7QUFHakNFLGNBQVksRUFBRUosTUFBTUssSUFBUixFQUFjQyxTQUFTRCxLQUFLRSxHQUE1QixFQUhxQjtBQUlqQ0MsYUFBWSxFQUFFUixNQUFNSyxJQUFSLEVBQWNDLFNBQVNELEtBQUtFLEdBQTVCLEVBSnFCO0FBS2pDRSxZQUFZLEVBQUVULE1BQU1VLE9BQVIsRUFMcUI7QUFNakNDLG1CQUFpQixFQUFFWCxNQUFNQyxNQUFSLEVBQWdCQyxVQUFVLElBQTFCLEVBTmdCO0FBT2pDVSxXQUFTLENBQUM7QUFDUkMsU0FBSyxFQUFDYixNQUFNTCxRQUFQLEVBREc7QUFFUlEsVUFBTSxFQUFDSCxNQUFNQyxNQUFQLEVBQWVDLFVBQVUsSUFBekIsRUFGRTtBQUdSRSxnQkFBWSxFQUFDSixNQUFNSyxJQUFQLEVBQWFDLFNBQVNELEtBQUtFLEdBQTNCLEVBSEo7QUFJUkkscUJBQWlCLEVBQUNYLE1BQU1DLE1BQVAsRUFBZUMsVUFBVSxJQUF6QixFQUpUO0FBS1JPLGNBQVUsRUFBQ1QsTUFBTVUsT0FBUDtBQUxGLEdBQUQsQ0FQd0I7QUFjakNJLFNBQU8sQ0FBQyxFQUFDQyxJQUFJZCxNQUFMLEVBQUQ7QUFkMEIsQ0FBcEIsQ0FBZjs7QUFpQkFlLE9BQU9DLE9BQVAsR0FBaUJ4QixTQUFTeUIsS0FBVCxDQUFlLFFBQWYsRUFBeUJwQixNQUF6QixDQUFqQiIsImZpbGUiOiJUaHJlYWRfTW9kZWwuanMiLCJzb3VyY2VSb290IjoiL2FwcC9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCBPYmplY3RJZCA9IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZDtcblxuY29uc3QgVGhyZWFkID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIGJvYXJkOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcbiAgdGV4dDogIHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuICBjcmVhdGVkX29uOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXG4gIGJ1bXBlZF9vbjogIHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcbiAgcmVwb3J0ZWQ6ICAgeyB0eXBlOiBCb29sZWFuIH0sXG4gIGRlbGV0ZV9wYXNzd29yZDogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gIHJlcGxpZXM6IFt7XG4gICAgX2lkOiB7dHlwZTogT2JqZWN0SWR9LFxuICAgIHRleHQ6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICBjcmVhdGVkX29uOiB7dHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3d9LFxuICAgIGRlbGV0ZV9wYXNzd29yZDoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWV9LFxuICAgIHJlcG9ydGVkOiB7dHlwZTogQm9vbGVhbn1cbiAgfV0sXG4gIHZpZXdzOiBbe2lwOiBTdHJpbmd9XVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ1RocmVhZCcsIFRocmVhZCk7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "Thread_Model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "ObjectId",
        "Schema",
        "Types",
        "Thread",
        "board",
        "type",
        "String",
        "required",
        "text",
        "created_on",
        "Date",
        "default",
        "now",
        "bumped_on",
        "reported",
        "Boolean",
        "delete_password",
        "replies",
        "_id",
        "views",
        "ip",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,WAAWF,SAASG,MAAT,CAAgBC,KAAhB,CAAsBF,QAAvC;;AAEA,IAAMG,SAAS,IAAIL,SAASG,MAAb,CAAoB;AACjCG,SAAO,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAD0B;AAEjCC,QAAO,EAAEH,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAF0B;AAGjCE,cAAY,EAAEJ,MAAMK,IAAR,EAAcC,SAASD,KAAKE,GAA5B,EAHqB;AAIjCC,aAAY,EAAER,MAAMK,IAAR,EAAcC,SAASD,KAAKE,GAA5B,EAJqB;AAKjCE,YAAY,EAAET,MAAMU,OAAR,EALqB;AAMjCC,mBAAiB,EAAEX,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EANgB;AAOjCU,WAAS,CAAC;AACRC,SAAK,EAACb,MAAML,QAAP,EADG;AAERQ,UAAM,EAACH,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAFE;AAGRE,gBAAY,EAACJ,MAAMK,IAAP,EAAaC,SAASD,KAAKE,GAA3B,EAHJ;AAIRI,qBAAiB,EAACX,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAJT;AAKRO,cAAU,EAACT,MAAMU,OAAP;AALF,GAAD,CAPwB;AAcjCI,SAAO,CAAC,EAACC,IAAId,MAAL,EAAD;AAd0B,CAApB,CAAf;;AAiBAe,OAAOC,OAAP,GAAiBxB,SAASyB,KAAT,CAAe,QAAf,EAAyBpB,MAAzB,CAAjB",
      "file": "Thread_Model.js",
      "sourceRoot": "/app/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\nconst Thread = new mongoose.Schema({\n  board: { type: String, required: true },\n  text:  { type: String, required: true },\n  created_on: { type: Date, default: Date.now },\n  bumped_on:  { type: Date, default: Date.now },\n  reported:   { type: Boolean },\n  delete_password: { type: String, required: true },\n  replies: [{\n    _id: {type: ObjectId},\n    text: {type: String, required: true},\n    created_on: {type: Date, default: Date.now},\n    delete_password: {type: String, required: true},\n    reported: {type: Boolean}\n  }],\n  views: [{ip: String}]\n});\n\nmodule.exports = mongoose.model('Thread', Thread);"
      ]
    },
    "mtime": 1547502203000
  },
  "{\"filename\":\"/app/server.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1:test": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/server.js",
      "filenameRelative": "/app/server.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "server.js",
      "sourceFileName": "server.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "server"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar express = require('express');\nvar bodyParser = require('body-parser');\nvar helmet = require('helmet');\nvar expect = require('chai').expect;\nvar cors = require('cors');\nvar PORT = process.env.PORT;\nvar TEST = process.env.NODE_ENV === 'test';\nvar apiRoutes = require('./routes/api.js');\nvar fccTestingRoutes = require('./routes/fcctesting.js');\nvar runner = require('./test-runner');\nvar app = express();\n\nvar MongoClient = require('mongodb').MongoClient;\nvar URL = process.env.DB;\nvar dbName = 'fcc_jtodd';\nvar client = new MongoClient(URL, { useNewUrlParser: true });\n\napp.use(express.static('public'));\napp.use(cors({ origin: '*' }));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(helmet.frameguard({ action: 'sameorigin' }));\napp.use(helmet.dnsPrefetchControl());\napp.use(helmet.referrerPolicy({ policy: 'same-origin' }));\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\nclient.connect(function (err) {\n  if (err) console.log('Db connection error');\n  var db = client.db(dbName);\n  apiRoutes(app, db);\n  app.listen(PORT, function () {\n    console.log('Your app is listening on port ' + PORT);\n    if (TEST) {\n      console.log('Running Tests...');\n      setTimeout(function () {\n        try {\n          runner.run();\n        } catch (e) {\n          var error = e;\n          console.log('Tests are not valid:');\n          console.log(error);\n        }\n      }, 3500);\n    }\n  });\n});\n\nmodule.exports = app; //for testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJoZWxtZXQiLCJleHBlY3QiLCJjb3JzIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJURVNUIiwiTk9ERV9FTlYiLCJhcGlSb3V0ZXMiLCJmY2NUZXN0aW5nUm91dGVzIiwicnVubmVyIiwiYXBwIiwiTW9uZ29DbGllbnQiLCJVUkwiLCJEQiIsImRiTmFtZSIsImNsaWVudCIsInVzZU5ld1VybFBhcnNlciIsInVzZSIsInN0YXRpYyIsIm9yaWdpbiIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJmcmFtZWd1YXJkIiwiYWN0aW9uIiwiZG5zUHJlZmV0Y2hDb250cm9sIiwicmVmZXJyZXJQb2xpY3kiLCJwb2xpY3kiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsImRiIiwibGlzdGVuIiwic2V0VGltZW91dCIsInJ1biIsImUiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsVUFBb0JDLFFBQVEsU0FBUixDQUExQjtBQUNBLElBQU1DLGFBQW9CRCxRQUFRLGFBQVIsQ0FBMUI7QUFDQSxJQUFNRSxTQUFvQkYsUUFBUSxRQUFSLENBQTFCO0FBQ0EsSUFBTUcsU0FBb0JILFFBQVEsTUFBUixFQUFnQkcsTUFBMUM7QUFDQSxJQUFNQyxPQUFvQkosUUFBUSxNQUFSLENBQTFCO0FBQ0EsSUFBTUssT0FBb0JDLFFBQVFDLEdBQVIsQ0FBWUYsSUFBdEM7QUFDQSxJQUFNRyxPQUFvQkYsUUFBUUMsR0FBUixDQUFZRSxRQUFaLEtBQXlCLE1BQW5EO0FBQ0EsSUFBTUMsWUFBb0JWLFFBQVEsaUJBQVIsQ0FBMUI7QUFDQSxJQUFNVyxtQkFBb0JYLFFBQVEsd0JBQVIsQ0FBMUI7QUFDQSxJQUFNWSxTQUFvQlosUUFBUSxlQUFSLENBQTFCO0FBQ0EsSUFBTWEsTUFBb0JkLFNBQTFCOztBQUVBLElBQU1lLGNBQWNkLFFBQVEsU0FBUixFQUFtQmMsV0FBdkM7QUFDQSxJQUFNQyxNQUFjVCxRQUFRQyxHQUFSLENBQVlTLEVBQWhDO0FBQ0EsSUFBTUMsU0FBYyxXQUFwQjtBQUNBLElBQU1DLFNBQWMsSUFBSUosV0FBSixDQUFnQkMsR0FBaEIsRUFBcUIsRUFBQ0ksaUJBQWlCLElBQWxCLEVBQXJCLENBQXBCOztBQUVBTixJQUFJTyxHQUFKLENBQVFyQixRQUFRc0IsTUFBUixDQUFlLFFBQWYsQ0FBUjtBQUNBUixJQUFJTyxHQUFKLENBQVFoQixLQUFLLEVBQUNrQixRQUFRLEdBQVQsRUFBTCxDQUFSO0FBQ0FULElBQUlPLEdBQUosQ0FBUW5CLFdBQVdzQixJQUFYLEVBQVI7QUFDQVYsSUFBSU8sR0FBSixDQUFRbkIsV0FBV3VCLFVBQVgsQ0FBc0IsRUFBRUMsVUFBVSxJQUFaLEVBQXRCLENBQVI7O0FBRUFaLElBQUlPLEdBQUosQ0FBUWxCLE9BQU93QixVQUFQLENBQWtCLEVBQUVDLFFBQVEsWUFBVixFQUFsQixDQUFSO0FBQ0FkLElBQUlPLEdBQUosQ0FBUWxCLE9BQU8wQixrQkFBUCxFQUFSO0FBQ0FmLElBQUlPLEdBQUosQ0FBUWxCLE9BQU8yQixjQUFQLENBQXNCLEVBQUVDLFFBQVEsYUFBVixFQUF0QixDQUFSOztBQUVBO0FBQ0FuQixpQkFBaUJFLEdBQWpCOztBQUVBSyxPQUFPYSxPQUFQLENBQWUsZUFBTztBQUNwQixNQUFJQyxHQUFKLEVBQVNDLFFBQVFDLEdBQVIsQ0FBWSxxQkFBWjtBQUNULE1BQU1DLEtBQUtqQixPQUFPaUIsRUFBUCxDQUFVbEIsTUFBVixDQUFYO0FBQ0FQLFlBQVVHLEdBQVYsRUFBZXNCLEVBQWY7QUFDQXRCLE1BQUl1QixNQUFKLENBQVcvQixJQUFYLEVBQWlCLFlBQU07QUFDckI0QixZQUFRQyxHQUFSLENBQVksbUNBQW1DN0IsSUFBL0M7QUFDQSxRQUFJRyxJQUFKLEVBQVU7QUFDUnlCLGNBQVFDLEdBQVIsQ0FBWSxrQkFBWjtBQUNBRyxpQkFBVyxZQUFNO0FBQ2YsWUFBSTtBQUNGekIsaUJBQU8wQixHQUFQO0FBQ0QsU0FGRCxDQUVFLE9BQU1DLENBQU4sRUFBUztBQUNULGNBQUlDLFFBQVFELENBQVo7QUFDQU4sa0JBQVFDLEdBQVIsQ0FBWSxzQkFBWjtBQUNBRCxrQkFBUUMsR0FBUixDQUFZTSxLQUFaO0FBQ0Q7QUFDRixPQVJELEVBUUcsSUFSSDtBQVNEO0FBQ0YsR0FkRDtBQWVELENBbkJEOztBQXNCQUMsT0FBT0MsT0FBUCxHQUFpQjdCLEdBQWpCLEMsQ0FBc0IiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlUm9vdCI6Ii9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzICAgICAgICAgICA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgICAgICAgID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbmNvbnN0IGhlbG1ldCAgICAgICAgICAgID0gcmVxdWlyZSgnaGVsbWV0Jyk7XG5jb25zdCBleHBlY3QgICAgICAgICAgICA9IHJlcXVpcmUoJ2NoYWknKS5leHBlY3Q7XG5jb25zdCBjb3JzICAgICAgICAgICAgICA9IHJlcXVpcmUoJ2NvcnMnKTtcbmNvbnN0IFBPUlQgICAgICAgICAgICAgID0gcHJvY2Vzcy5lbnYuUE9SVDtcbmNvbnN0IFRFU1QgICAgICAgICAgICAgID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd0ZXN0JztcbmNvbnN0IGFwaVJvdXRlcyAgICAgICAgID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXBpLmpzJyk7XG5jb25zdCBmY2NUZXN0aW5nUm91dGVzICA9IHJlcXVpcmUoJy4vcm91dGVzL2ZjY3Rlc3RpbmcuanMnKTtcbmNvbnN0IHJ1bm5lciAgICAgICAgICAgID0gcmVxdWlyZSgnLi90ZXN0LXJ1bm5lcicpO1xuY29uc3QgYXBwICAgICAgICAgICAgICAgPSBleHByZXNzKCk7XG5cbmNvbnN0IE1vbmdvQ2xpZW50ID0gcmVxdWlyZSgnbW9uZ29kYicpLk1vbmdvQ2xpZW50O1xuY29uc3QgVVJMICAgICAgICAgPSBwcm9jZXNzLmVudi5EQjtcbmNvbnN0IGRiTmFtZSAgICAgID0gJ2ZjY19qdG9kZCc7XG5jb25zdCBjbGllbnQgICAgICA9IG5ldyBNb25nb0NsaWVudChVUkwsIHt1c2VOZXdVcmxQYXJzZXI6IHRydWV9KTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuYXBwLnVzZShjb3JzKHtvcmlnaW46ICcqJ30pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5cbmFwcC51c2UoaGVsbWV0LmZyYW1lZ3VhcmQoeyBhY3Rpb246ICdzYW1lb3JpZ2luJyB9KSk7XG5hcHAudXNlKGhlbG1ldC5kbnNQcmVmZXRjaENvbnRyb2woKSk7XG5hcHAudXNlKGhlbG1ldC5yZWZlcnJlclBvbGljeSh7IHBvbGljeTogJ3NhbWUtb3JpZ2luJyB9KSk7XG5cbi8vRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzXG5mY2NUZXN0aW5nUm91dGVzKGFwcCk7XG4gICAgXG5jbGllbnQuY29ubmVjdChlcnIgPT4ge1xuICBpZiAoZXJyKSBjb25zb2xlLmxvZygnRGIgY29ubmVjdGlvbiBlcnJvcicpO1xuICBjb25zdCBkYiA9IGNsaWVudC5kYihkYk5hbWUpO1xuICBhcGlSb3V0ZXMoYXBwLCBkYik7XG4gIGFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdZb3VyIGFwcCBpcyBsaXN0ZW5pbmcgb24gcG9ydCAnICsgUE9SVCk7XG4gICAgaWYgKFRFU1QpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdSdW5uaW5nIFRlc3RzLi4uJyk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBydW5uZXIucnVuKCk7XG4gICAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICAgIHZhciBlcnJvciA9IGU7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1Rlc3RzIGFyZSBub3QgdmFsaWQ6Jyk7XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9LCAzNTAwKTtcbiAgICB9XG4gIH0pO1xufSk7XG5cblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7IC8vZm9yIHRlc3RpbmciXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "helmet",
        "expect",
        "cors",
        "PORT",
        "process",
        "env",
        "TEST",
        "NODE_ENV",
        "apiRoutes",
        "fccTestingRoutes",
        "runner",
        "app",
        "MongoClient",
        "URL",
        "DB",
        "dbName",
        "client",
        "useNewUrlParser",
        "use",
        "static",
        "origin",
        "json",
        "urlencoded",
        "extended",
        "frameguard",
        "action",
        "dnsPrefetchControl",
        "referrerPolicy",
        "policy",
        "connect",
        "err",
        "console",
        "log",
        "db",
        "listen",
        "setTimeout",
        "run",
        "e",
        "error",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,UAAoBC,QAAQ,SAAR,CAA1B;AACA,IAAMC,aAAoBD,QAAQ,aAAR,CAA1B;AACA,IAAME,SAAoBF,QAAQ,QAAR,CAA1B;AACA,IAAMG,SAAoBH,QAAQ,MAAR,EAAgBG,MAA1C;AACA,IAAMC,OAAoBJ,QAAQ,MAAR,CAA1B;AACA,IAAMK,OAAoBC,QAAQC,GAAR,CAAYF,IAAtC;AACA,IAAMG,OAAoBF,QAAQC,GAAR,CAAYE,QAAZ,KAAyB,MAAnD;AACA,IAAMC,YAAoBV,QAAQ,iBAAR,CAA1B;AACA,IAAMW,mBAAoBX,QAAQ,wBAAR,CAA1B;AACA,IAAMY,SAAoBZ,QAAQ,eAAR,CAA1B;AACA,IAAMa,MAAoBd,SAA1B;;AAEA,IAAMe,cAAcd,QAAQ,SAAR,EAAmBc,WAAvC;AACA,IAAMC,MAAcT,QAAQC,GAAR,CAAYS,EAAhC;AACA,IAAMC,SAAc,WAApB;AACA,IAAMC,SAAc,IAAIJ,WAAJ,CAAgBC,GAAhB,EAAqB,EAACI,iBAAiB,IAAlB,EAArB,CAApB;;AAEAN,IAAIO,GAAJ,CAAQrB,QAAQsB,MAAR,CAAe,QAAf,CAAR;AACAR,IAAIO,GAAJ,CAAQhB,KAAK,EAACkB,QAAQ,GAAT,EAAL,CAAR;AACAT,IAAIO,GAAJ,CAAQnB,WAAWsB,IAAX,EAAR;AACAV,IAAIO,GAAJ,CAAQnB,WAAWuB,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEAZ,IAAIO,GAAJ,CAAQlB,OAAOwB,UAAP,CAAkB,EAAEC,QAAQ,YAAV,EAAlB,CAAR;AACAd,IAAIO,GAAJ,CAAQlB,OAAO0B,kBAAP,EAAR;AACAf,IAAIO,GAAJ,CAAQlB,OAAO2B,cAAP,CAAsB,EAAEC,QAAQ,aAAV,EAAtB,CAAR;;AAEA;AACAnB,iBAAiBE,GAAjB;;AAEAK,OAAOa,OAAP,CAAe,eAAO;AACpB,MAAIC,GAAJ,EAASC,QAAQC,GAAR,CAAY,qBAAZ;AACT,MAAMC,KAAKjB,OAAOiB,EAAP,CAAUlB,MAAV,CAAX;AACAP,YAAUG,GAAV,EAAesB,EAAf;AACAtB,MAAIuB,MAAJ,CAAW/B,IAAX,EAAiB,YAAM;AACrB4B,YAAQC,GAAR,CAAY,mCAAmC7B,IAA/C;AACA,QAAIG,IAAJ,EAAU;AACRyB,cAAQC,GAAR,CAAY,kBAAZ;AACAG,iBAAW,YAAM;AACf,YAAI;AACFzB,iBAAO0B,GAAP;AACD,SAFD,CAEE,OAAMC,CAAN,EAAS;AACT,cAAIC,QAAQD,CAAZ;AACAN,kBAAQC,GAAR,CAAY,sBAAZ;AACAD,kBAAQC,GAAR,CAAYM,KAAZ;AACD;AACF,OARD,EAQG,IARH;AASD;AACF,GAdD;AAeD,CAnBD;;AAsBAC,OAAOC,OAAP,GAAiB7B,GAAjB,C,CAAsB",
      "file": "server.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "const express           = require('express');\nconst bodyParser        = require('body-parser');\nconst helmet            = require('helmet');\nconst expect            = require('chai').expect;\nconst cors              = require('cors');\nconst PORT              = process.env.PORT;\nconst TEST              = process.env.NODE_ENV === 'test';\nconst apiRoutes         = require('./routes/api.js');\nconst fccTestingRoutes  = require('./routes/fcctesting.js');\nconst runner            = require('./test-runner');\nconst app               = express();\n\nconst MongoClient = require('mongodb').MongoClient;\nconst URL         = process.env.DB;\nconst dbName      = 'fcc_jtodd';\nconst client      = new MongoClient(URL, {useNewUrlParser: true});\n\napp.use(express.static('public'));\napp.use(cors({origin: '*'}));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.use(helmet.frameguard({ action: 'sameorigin' }));\napp.use(helmet.dnsPrefetchControl());\napp.use(helmet.referrerPolicy({ policy: 'same-origin' }));\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n    \nclient.connect(err => {\n  if (err) console.log('Db connection error');\n  const db = client.db(dbName);\n  apiRoutes(app, db);\n  app.listen(PORT, () => {\n    console.log('Your app is listening on port ' + PORT);\n    if (TEST) {\n      console.log('Running Tests...');\n      setTimeout(() => {\n        try {\n          runner.run();\n        } catch(e) {\n          var error = e;\n          console.log('Tests are not valid:');\n          console.log(error);\n        }\n      }, 3500);\n    }\n  });\n});\n\n\nmodule.exports = app; //for testing"
      ]
    },
    "mtime": 1548148294000
  },
  "{\"filename\":\"/app/routes/api.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1:test": {
    "metadata": {
      "usedHelpers": [
        "interopRequireDefault"
      ],
      "marked": [],
      "modules": {
        "imports": [
          {
            "source": "mongodb",
            "imported": [
              "default",
              "ObjectId"
            ],
            "specifiers": [
              {
                "kind": "named",
                "imported": "default",
                "local": "MongoClient"
              },
              {
                "kind": "named",
                "imported": "ObjectId",
                "local": "ObjectId"
              }
            ]
          }
        ],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/routes/api.js",
      "filenameRelative": "/app/routes/api.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "api.js",
      "sourceFileName": "api.js",
      "sourceRoot": "/app/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "api"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar _mongodb = require('mongodb');\n\nvar _mongodb2 = _interopRequireDefault(_mongodb);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Thread = require('../models/Thread_Model.js');\n\nmodule.exports = function (app, db) {\n  var Threads = db.collection('threads');\n\n  var boardThreads = function boardThreads(board) {\n    return new Promise(function (resolve, reject) {\n      Threads.find({ board: board }).sort([['bumped_on', -1]]) //.limit(10)\n      .project({ delete_password: 0, reported: 0, \"replies.delete_password\": 0, \"replies.reported\": 0 }).toArray(function (err, docs) {\n        if (err) return reject(err);\n\n        docs.forEach(function (thread) {\n          thread.comments = thread.replies.length;\n          thread.replies.sort(function (a, b) {\n            return new Date(b.created_on) - new Date(a.created_on);\n          });\n          thread.replies = thread.replies.length > 3 ? thread.replies.slice(0, 3) : thread.replies;\n        });\n\n        return resolve({\n          threads: docs.length > 10 ? docs.slice(0, 10) : docs,\n          pages: Math.floor(docs.length / 10) + 1\n        });\n      });\n    });\n  };\n\n  var singleThread = function singleThread(thread_id) {\n    var projection = {\n      delete_password: 0,\n      reported: 0,\n      \"replies.delete_password\": 0,\n      \"replies.reported\": 0\n    };\n\n    return new Promise(function (resolve, reject) {\n      Threads.findOne(thread_id, { projection: projection }, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n\n        docs.replies.sort(function (a, b) {\n          return new Date(b.created_on) - new Date(a.created_on);\n        });\n\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var pushReply = function pushReply(query, update) {\n    return new Promise(function (resolve, reject) {\n      Threads.updateOne(query, update, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        docs = docs.result.nModified;\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var addThread = function addThread(new_thread) {\n    return new Promise(function (resolve, reject) {\n      Threads.insertOne(new_thread, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        docs = docs.result.n;\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var updateReported = function updateReported(query, update) {\n    return new Promise(function (resolve, reject) {\n      Threads.findOneAndUpdate(query, update, { returnOriginal: false }, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        return resolve({ docs: docs.value, hasError: false });\n      });\n    });\n  };\n\n  var deleteThread = function deleteThread(query) {\n    return new Promise(function (resolve, reject) {\n      Threads.deleteOne(query, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n        docs = docs.deletedCount;\n        return resolve({ docs: docs, hasError: false });\n      });\n    });\n  };\n\n  var deleteReply = function deleteReply(query, reply) {\n    return new Promise(function (resolve, reject) {\n\n      Threads.findOne(query, function (err, docs) {\n        if (err) return reject({ err: err, hasError: true });\n\n        var updatedReply = docs.replies.find(function (el) {\n          return el._id.toString() === reply._id;\n        });\n        var password_match = updatedReply.delete_password === reply.delete_password;\n\n        if (password_match) {\n          updatedReply.text = '[deleted]';\n          var update = { $set: { replies: docs.replies } };\n\n          Threads.updateOne(query, update, function (err, docs) {\n            if (err) return reject({ err: err, hasError: true });\n            docs = docs.result.nModified;\n            return resolve({ docs: docs, hasError: false });\n          });\n        } else {\n          return resolve({ docs: 0, hasError: false });\n        }\n      });\n    });\n  };\n\n  app.get('/', function (req, res) {\n    return res.sendFile(process.cwd() + '/views/index.html');\n  });\n\n  app.get('/api/threads/:board', function (req, res) {\n    var board = req.params.board;\n\n    boardThreads(board).then(function (data) {\n      if (!data.threads.length) return res.json({ error: 'request failed' });\n      return res.json(data);\n    });\n  });\n\n  app.get('/api/replies/:board', function (req, res) {\n    var thread_id = { _id: (0, _mongodb.ObjectId)(req.query.thread_id) };\n\n    singleThread(thread_id).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      return res.json(data.docs);\n    });\n  });\n\n  app.post('/api/replies/:board', function (req, res) {\n    var query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n    var update = {\n      $push: {\n        replies: {\n          _id: (0, _mongodb.ObjectId)(),\n          text: req.body.text,\n          created_on: new Date(),\n          delete_password: req.body.delete_password,\n          reported: false\n        }\n      },\n      $set: { bumped_on: new Date() }\n    };\n    var board = req.params.board;\n\n    if (req.query.thread_id) {\n      pushReply(query, update).then(function (result) {\n        if (result.hasError) return res.json({ error: 'request failed' });\n        return res.json(result);\n      });\n    } else {\n      pushReply(query, update).then(function (result) {\n        if (!result.docs) return res.json({ error: 'request failed' });\n        return res.json(result.docs);\n      });\n    }\n  });\n\n  app.post('/api/threads/:board', function (req, res) {\n    var new_thread = new Thread({\n      board: req.params.board,\n      text: req.body.text,\n      created_on: new Date(),\n      bumped_on: new Date(),\n      reported: false,\n      delete_password: req.body.delete_password,\n      replies: []\n    });\n\n    addThread(new_thread).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      return res.json(data.docs);\n    });\n  });\n\n  app.put('/api/threads/:board', function (req, res) {\n    var query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n    var update = { $set: { reported: true } };\n\n    updateReported(query, update).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      if (data.docs.reported) {\n        return res.json({ message: 'Success' });\n      } else {\n        return res.json({ message: 'Failed' });\n      }\n    });\n  });\n\n  app.put('/api/replies/:board', function (req, res) {\n    var query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id), \"replies._id\": (0, _mongodb.ObjectId)(req.body.reply_id) };\n    var update = { $set: { \"replies.$.reported\": true } };\n\n    updateReported(query, update).then(function (data) {\n      if (data.hasError) return res.json({ error: 'request failed' });\n      var reported = data.docs.replies.find(function (el) {\n        return el._id.toString() === req.body.reply_id;\n      }).reported;\n      if (reported) {\n        return res.json({ message: 'Success' });\n      } else {\n        return res.json({ message: 'Failed' });\n      }\n    });\n  });\n\n  app.delete('/api/threads/:board', function (req, res) {\n    var query = {};\n    var update = {};\n    var reply = {\n      _id: req.body.reply_id,\n      delete_password: req.body.delete_password\n    };\n\n    if (req.body.reply_id) {\n      query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n\n      deleteReply(query, reply).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        return res.json(data.docs);\n      });\n    } else {\n      query = {\n        _id: (0, _mongodb.ObjectId)(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n\n      deleteThread(query).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        if (data.docs) {\n          res.json({ message: 'Success' });\n        } else {\n          return res.json({ message: 'Incorrect Password' });\n        }\n      });\n    }\n  });\n\n  app.delete('/api/replies/:board', function (req, res) {\n    var query = {};\n    var update = {};\n    var reply = {\n      _id: req.body.reply_id,\n      delete_password: req.body.delete_password\n    };\n\n    if (req.body.reply_id) {\n      query = { _id: (0, _mongodb.ObjectId)(req.body.thread_id) };\n\n      deleteReply(query, reply).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        if (data.docs) {\n          return res.json({ message: 'Success' });\n        } else {\n          return res.json({ message: 'Incorrect Password' });\n        }\n      });\n    } else {\n      query = {\n        _id: (0, _mongodb.ObjectId)(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n\n      deleteThread(query).then(function (data) {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        return res.json(data.docs);\n      });\n    }\n  });\n\n  app.use(function (req, res) {\n    return res.status(404).type('text').send('Not Found');\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "Thread",
        "require",
        "module",
        "exports",
        "app",
        "db",
        "Threads",
        "collection",
        "boardThreads",
        "board",
        "Promise",
        "resolve",
        "reject",
        "find",
        "sort",
        "project",
        "delete_password",
        "reported",
        "toArray",
        "err",
        "docs",
        "forEach",
        "thread",
        "comments",
        "replies",
        "length",
        "a",
        "b",
        "Date",
        "created_on",
        "slice",
        "threads",
        "pages",
        "Math",
        "floor",
        "singleThread",
        "thread_id",
        "projection",
        "findOne",
        "hasError",
        "pushReply",
        "query",
        "update",
        "updateOne",
        "result",
        "nModified",
        "addThread",
        "new_thread",
        "insertOne",
        "n",
        "updateReported",
        "findOneAndUpdate",
        "returnOriginal",
        "value",
        "deleteThread",
        "deleteOne",
        "deletedCount",
        "deleteReply",
        "reply",
        "updatedReply",
        "el",
        "_id",
        "toString",
        "password_match",
        "text",
        "$set",
        "get",
        "req",
        "res",
        "sendFile",
        "process",
        "cwd",
        "params",
        "then",
        "data",
        "json",
        "error",
        "post",
        "body",
        "$push",
        "bumped_on",
        "put",
        "message",
        "reply_id",
        "delete",
        "use",
        "status",
        "type",
        "send"
      ],
      "mappings": "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",
      "file": "api.js",
      "sourceRoot": "/app/routes",
      "sourcesContent": [
        "import MongoClient, { ObjectId } from 'mongodb';\nconst Thread = require('../models/Thread_Model.js');\n\nmodule.exports = (app, db) => {\n  const Threads = db.collection('threads');\n  \n  \n  const boardThreads = (board) => {\n    return new Promise((resolve, reject) => {\n      Threads\n        .find({ board })\n        .sort([['bumped_on', -1]]) //.limit(10)\n        .project({delete_password: 0, reported: 0, \"replies.delete_password\": 0, \"replies.reported\": 0})\n        .toArray((err, docs) => {\n        if (err) return reject(err);\n        \n        docs.forEach(thread => {\n          thread.comments = thread.replies.length;\n          thread.replies.sort((a,b) => new Date(b.created_on) - new Date(a.created_on));\n          thread.replies = thread.replies.length > 3 ? thread.replies.slice(0, 3) : thread.replies;\n        });\n        \n        return resolve({\n          threads: docs.length > 10 ? docs.slice(0,10) : docs, \n          pages: Math.floor(docs.length / 10 ) + 1\n        });\n      });\n    });\n  };\n  \n  \n  const singleThread = (thread_id) => {\n    const projection = {\n      delete_password: 0, \n      reported: 0, \n      \"replies.delete_password\": 0, \n      \"replies.reported\": 0\n    };\n    \n    return new Promise((resolve, reject) => {\n      Threads.findOne(thread_id, {projection}, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        \n        docs.replies.sort((a,b) => new Date(b.created_on) - new Date(a.created_on));\n        \n        return resolve({ docs, hasError: false});\n      });\n    });\n  };\n  \n  \n  const pushReply = (query, update) => {\n    return new Promise((resolve, reject) => {\n      Threads.updateOne(query, update, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        docs = docs.result.nModified;\n        return resolve({ docs, hasError: false });\n      });\n    });\n  };\n  \n  \n  const addThread = (new_thread) => {\n    return new Promise((resolve, reject) => {\n      Threads.insertOne(new_thread, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        docs = docs.result.n;\n      return resolve({ docs, hasError: false });\n    });\n    });\n  };\n  \n  \n  const updateReported = (query, update) => {\n    return new Promise((resolve, reject) => {\n      Threads.findOneAndUpdate(query, update, {returnOriginal: false}, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        return resolve({ docs: docs.value, hasError: false });\n      });\n    });\n  };\n  \n  \n  const deleteThread = (query) => {\n    return new Promise((resolve, reject) => {\n      Threads.deleteOne(query, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        docs = docs.deletedCount;\n        return resolve({ docs, hasError: false });\n      });\n    });\n  };\n  \n  \n  const deleteReply = (query, reply) => {\n    return new Promise((resolve, reject) => {\n      \n      Threads.findOne(query, (err, docs) => {\n        if (err) return reject({ err, hasError: true });\n        \n        let updatedReply = docs.replies.find(el => el._id.toString() === reply._id);\n        let password_match = updatedReply.delete_password === reply.delete_password;\n        \n        if (password_match) {\n          updatedReply.text = '[deleted]';\n          let update = { $set: { replies: docs.replies } };\n          \n          Threads.updateOne(query, update, (err, docs) => {\n            if (err) return reject({ err, hasError: true });\n            docs = docs.result.nModified;\n            return resolve({ docs, hasError: false });\n          });\n        } else {\n          return resolve({docs: 0, hasError: false });\n        }\n      });\n    });\n  };\n  \n  app.get('/', (req, res) => res.sendFile(process.cwd() + '/views/index.html'));\n  \n  \n  app.get('/api/threads/:board', (req, res) => {\n    const board = req.params.board;\n    \n    boardThreads(board)\n      .then(data => {\n        if (!data.threads.length) return res.json({error: 'request failed'});\n        return res.json(data);\n      });\n  });\n  \n  \n  app.get('/api/replies/:board', (req, res) => {\n    const thread_id = { _id: ObjectId(req.query.thread_id) };\n    \n    singleThread(thread_id)\n      .then(data => {\n        if (data.hasError) return res.json({error: 'request failed'});\n        return res.json(data.docs);\n      });\n  });\n  \n  \n  app.post('/api/replies/:board', (req, res) => {\n    let query = { _id: ObjectId(req.body.thread_id) };\n    let update = {\n      $push: { \n        replies: {\n          _id: ObjectId(),\n          text: req.body.text,\n          created_on: new Date(),\n          delete_password: req.body.delete_password,\n          reported: false\n        }\n      },\n      $set:  { bumped_on: new Date() }\n    };\n    const board = req.params.board;\n    \n    if (req.query.thread_id) {\n      pushReply(query, update)\n        .then(result => {\n          if (result.hasError) return res.json({error: 'request failed'});\n          return res.json(result);\n        });\n    } else {\n      pushReply(query, update)\n        .then(result => {\n          if (!result.docs) return res.json({error: 'request failed'});\n          return res.json(result.docs);\n        });\n    }\n    \n  });\n    \n    \n  app.post('/api/threads/:board', (req, res) => {\n    let new_thread = new Thread({\n      board: req.params.board,\n      text:  req.body.text,\n      created_on: new Date(),\n      bumped_on: new Date(),\n      reported: false,\n      delete_password: req.body.delete_password,\n      replies: []\n    });\n    \n    addThread(new_thread)\n      .then(data => {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        return res.json(data.docs);\n      });\n  });\n  \n  \n  app.put('/api/threads/:board', (req, res) => {\n    let query = {_id: ObjectId(req.body.thread_id)};\n    let update = {$set: {reported: true}};\n    \n    updateReported(query, update)\n      .then(data => {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        if (data.docs.reported) {\n          return res.json({message: 'Success'});\n        } else {\n          return res.json({message: 'Failed'});\n        }\n      });\n  });\n  \n  app.put('/api/replies/:board', (req, res) => {\n    let query = {_id: ObjectId(req.body.thread_id), \"replies._id\": ObjectId(req.body.reply_id)};\n    let update = {$set: {\"replies.$.reported\": true}};\n    \n    updateReported(query, update)\n      .then(data => {\n        if (data.hasError) return res.json({ error: 'request failed' });\n        let reported = data.docs.replies.find(el => el._id.toString() === req.body.reply_id).reported;\n        if (reported) {\n          return res.json({message: 'Success'});\n        } else {\n          return res.json({message: 'Failed'});\n        }\n      });\n  });\n  \n  \n  app.delete('/api/threads/:board', (req, res) => {    \n    let query = {};\n    let update = {};\n    let reply = {\n      _id: req.body.reply_id, \n      delete_password: req.body.delete_password\n    };\n    \n    if (req.body.reply_id) {\n      query = { _id: ObjectId(req.body.thread_id) };\n      \n      deleteReply(query, reply)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          return res.json(data.docs);\n        });\n    } else {\n      query = {\n        _id: ObjectId(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n      \n      deleteThread(query)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          if (data.docs) {\n            res.json({message: 'Success'});\n          } else {\n            return res.json({message: 'Incorrect Password'});\n          }\n        });\n    }\n  });\n  \n  app.delete('/api/replies/:board', (req, res) => {        \n    let query = {};\n    let update = {};\n    let reply = {\n      _id: req.body.reply_id, \n      delete_password: req.body.delete_password\n    };\n    \n    if (req.body.reply_id) {\n      query = { _id: ObjectId(req.body.thread_id) };\n      \n      deleteReply(query, reply)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          if (data.docs) {\n            return res.json({message: 'Success'});\n          } else {\n            return res.json({message: 'Incorrect Password'});\n          }\n        });\n    } else {\n      query = {\n        _id: ObjectId(req.body.thread_id),\n        delete_password: req.body.delete_password\n      };\n      \n      deleteThread(query)\n        .then(data => {\n          if (data.hasError) return res.json({ error: 'request failed' });\n          return res.json(data.docs);\n        });\n    }\n  });\n  \n  \n  app.use((req, res) => res.status(404).type('text').send('Not Found'));\n};"
      ]
    },
    "mtime": 1549143079000
  },
  "{\"filename\":\"/app/models/Thread_Model.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/models\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1:test": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/models/Thread_Model.js",
      "filenameRelative": "/app/models/Thread_Model.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "Thread_Model.js",
      "sourceFileName": "Thread_Model.js",
      "sourceRoot": "/app/models",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/models",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "Thread_Model"
    },
    "ignored": false,
    "code": "'use strict';\n\nvar mongoose = require('mongoose');\nvar ObjectId = mongoose.Schema.Types.ObjectId;\n\nvar Thread = new mongoose.Schema({\n  board: { type: String, required: true },\n  text: { type: String, required: true },\n  created_on: { type: Date, default: Date.now },\n  bumped_on: { type: Date, default: Date.now },\n  reported: { type: Boolean },\n  delete_password: { type: String, required: true },\n  replies: [{\n    _id: { type: ObjectId },\n    text: { type: String, required: true },\n    created_on: { type: Date, default: Date.now },\n    delete_password: { type: String, required: true },\n    reported: { type: Boolean }\n  }],\n  views: [{ ip: String }]\n});\n\nmodule.exports = mongoose.model('Thread', Thread);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRocmVhZF9Nb2RlbC5qcyJdLCJuYW1lcyI6WyJtb25nb29zZSIsInJlcXVpcmUiLCJPYmplY3RJZCIsIlNjaGVtYSIsIlR5cGVzIiwiVGhyZWFkIiwiYm9hcmQiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJ0ZXh0IiwiY3JlYXRlZF9vbiIsIkRhdGUiLCJkZWZhdWx0Iiwibm93IiwiYnVtcGVkX29uIiwicmVwb3J0ZWQiLCJCb29sZWFuIiwiZGVsZXRlX3Bhc3N3b3JkIiwicmVwbGllcyIsIl9pZCIsInZpZXdzIiwiaXAiLCJtb2R1bGUiLCJleHBvcnRzIiwibW9kZWwiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsV0FBV0MsUUFBUSxVQUFSLENBQWpCO0FBQ0EsSUFBTUMsV0FBV0YsU0FBU0csTUFBVCxDQUFnQkMsS0FBaEIsQ0FBc0JGLFFBQXZDOztBQUVBLElBQU1HLFNBQVMsSUFBSUwsU0FBU0csTUFBYixDQUFvQjtBQUNqQ0csU0FBTyxFQUFFQyxNQUFNQyxNQUFSLEVBQWdCQyxVQUFVLElBQTFCLEVBRDBCO0FBRWpDQyxRQUFPLEVBQUVILE1BQU1DLE1BQVIsRUFBZ0JDLFVBQVUsSUFBMUIsRUFGMEI7QUFHakNFLGNBQVksRUFBRUosTUFBTUssSUFBUixFQUFjQyxTQUFTRCxLQUFLRSxHQUE1QixFQUhxQjtBQUlqQ0MsYUFBWSxFQUFFUixNQUFNSyxJQUFSLEVBQWNDLFNBQVNELEtBQUtFLEdBQTVCLEVBSnFCO0FBS2pDRSxZQUFZLEVBQUVULE1BQU1VLE9BQVIsRUFMcUI7QUFNakNDLG1CQUFpQixFQUFFWCxNQUFNQyxNQUFSLEVBQWdCQyxVQUFVLElBQTFCLEVBTmdCO0FBT2pDVSxXQUFTLENBQUM7QUFDUkMsU0FBSyxFQUFDYixNQUFNTCxRQUFQLEVBREc7QUFFUlEsVUFBTSxFQUFDSCxNQUFNQyxNQUFQLEVBQWVDLFVBQVUsSUFBekIsRUFGRTtBQUdSRSxnQkFBWSxFQUFDSixNQUFNSyxJQUFQLEVBQWFDLFNBQVNELEtBQUtFLEdBQTNCLEVBSEo7QUFJUkkscUJBQWlCLEVBQUNYLE1BQU1DLE1BQVAsRUFBZUMsVUFBVSxJQUF6QixFQUpUO0FBS1JPLGNBQVUsRUFBQ1QsTUFBTVUsT0FBUDtBQUxGLEdBQUQsQ0FQd0I7QUFjakNJLFNBQU8sQ0FBQyxFQUFDQyxJQUFJZCxNQUFMLEVBQUQ7QUFkMEIsQ0FBcEIsQ0FBZjs7QUFpQkFlLE9BQU9DLE9BQVAsR0FBaUJ4QixTQUFTeUIsS0FBVCxDQUFlLFFBQWYsRUFBeUJwQixNQUF6QixDQUFqQiIsImZpbGUiOiJUaHJlYWRfTW9kZWwuanMiLCJzb3VyY2VSb290IjoiL2FwcC9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5jb25zdCBPYmplY3RJZCA9IG1vbmdvb3NlLlNjaGVtYS5UeXBlcy5PYmplY3RJZDtcblxuY29uc3QgVGhyZWFkID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gIGJvYXJkOiB7IHR5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWUgfSxcbiAgdGV4dDogIHsgdHlwZTogU3RyaW5nLCByZXF1aXJlZDogdHJ1ZSB9LFxuICBjcmVhdGVkX29uOiB7IHR5cGU6IERhdGUsIGRlZmF1bHQ6IERhdGUubm93IH0sXG4gIGJ1bXBlZF9vbjogIHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3cgfSxcbiAgcmVwb3J0ZWQ6ICAgeyB0eXBlOiBCb29sZWFuIH0sXG4gIGRlbGV0ZV9wYXNzd29yZDogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sXG4gIHJlcGxpZXM6IFt7XG4gICAgX2lkOiB7dHlwZTogT2JqZWN0SWR9LFxuICAgIHRleHQ6IHt0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlfSxcbiAgICBjcmVhdGVkX29uOiB7dHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3d9LFxuICAgIGRlbGV0ZV9wYXNzd29yZDoge3R5cGU6IFN0cmluZywgcmVxdWlyZWQ6IHRydWV9LFxuICAgIHJlcG9ydGVkOiB7dHlwZTogQm9vbGVhbn1cbiAgfV0sXG4gIHZpZXdzOiBbe2lwOiBTdHJpbmd9XVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ1RocmVhZCcsIFRocmVhZCk7Il19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "Thread_Model.js"
      ],
      "names": [
        "mongoose",
        "require",
        "ObjectId",
        "Schema",
        "Types",
        "Thread",
        "board",
        "type",
        "String",
        "required",
        "text",
        "created_on",
        "Date",
        "default",
        "now",
        "bumped_on",
        "reported",
        "Boolean",
        "delete_password",
        "replies",
        "_id",
        "views",
        "ip",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,WAAWF,SAASG,MAAT,CAAgBC,KAAhB,CAAsBF,QAAvC;;AAEA,IAAMG,SAAS,IAAIL,SAASG,MAAb,CAAoB;AACjCG,SAAO,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAD0B;AAEjCC,QAAO,EAAEH,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAF0B;AAGjCE,cAAY,EAAEJ,MAAMK,IAAR,EAAcC,SAASD,KAAKE,GAA5B,EAHqB;AAIjCC,aAAY,EAAER,MAAMK,IAAR,EAAcC,SAASD,KAAKE,GAA5B,EAJqB;AAKjCE,YAAY,EAAET,MAAMU,OAAR,EALqB;AAMjCC,mBAAiB,EAAEX,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EANgB;AAOjCU,WAAS,CAAC;AACRC,SAAK,EAACb,MAAML,QAAP,EADG;AAERQ,UAAM,EAACH,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAFE;AAGRE,gBAAY,EAACJ,MAAMK,IAAP,EAAaC,SAASD,KAAKE,GAA3B,EAHJ;AAIRI,qBAAiB,EAACX,MAAMC,MAAP,EAAeC,UAAU,IAAzB,EAJT;AAKRO,cAAU,EAACT,MAAMU,OAAP;AALF,GAAD,CAPwB;AAcjCI,SAAO,CAAC,EAACC,IAAId,MAAL,EAAD;AAd0B,CAApB,CAAf;;AAiBAe,OAAOC,OAAP,GAAiBxB,SAASyB,KAAT,CAAe,QAAf,EAAyBpB,MAAzB,CAAjB",
      "file": "Thread_Model.js",
      "sourceRoot": "/app/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst ObjectId = mongoose.Schema.Types.ObjectId;\n\nconst Thread = new mongoose.Schema({\n  board: { type: String, required: true },\n  text:  { type: String, required: true },\n  created_on: { type: Date, default: Date.now },\n  bumped_on:  { type: Date, default: Date.now },\n  reported:   { type: Boolean },\n  delete_password: { type: String, required: true },\n  replies: [{\n    _id: {type: ObjectId},\n    text: {type: String, required: true},\n    created_on: {type: Date, default: Date.now},\n    delete_password: {type: String, required: true},\n    reported: {type: Boolean}\n  }],\n  views: [{ip: String}]\n});\n\nmodule.exports = mongoose.model('Thread', Thread);"
      ]
    },
    "mtime": 1547502203000
  },
  "{\"filename\":\"/app/routes/fcctesting.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/routes\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1:test": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/routes/fcctesting.js",
      "filenameRelative": "/app/routes/fcctesting.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "fcctesting.js",
      "sourceFileName": "fcctesting.js",
      "sourceRoot": "/app/routes",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/routes",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "fcctesting"
    },
    "ignored": false,
    "code": "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nvar cors = require('cors');\nvar fs = require('fs');\nvar runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n  app.route('/_api/routes/api.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/routes/api.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.route('/_api/controllers/convertHandler.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n\n  var error;\n  app.get('/_api/get-tests', cors(), function (req, res, next) {\n    console.log(error);\n    if (!error && process.env.NODE_ENV === 'test') return next();\n    res.json({ status: 'unavailable' });\n  }, function (req, res, next) {\n    if (!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  }, function (req, res) {\n    runner.on('done', function (report) {\n      process.nextTick(function () {\n        return res.json(testFilter(runner.report, req.query.type, req.query.n));\n      });\n    });\n  });\n  app.get('/_api/app-info', function (req, res) {\n    var hs = Object.keys(res._headers).filter(function (h) {\n      return !h.match(/^access-control-\\w+/);\n    });\n    var hObj = {};\n    hs.forEach(function (h) {\n      hObj[h] = res._headers[h];\n    });\n    delete res._headers['strict-transport-security'];\n    res.json({ headers: hObj });\n  });\n};\n\nfunction testFilter(tests, type, n) {\n  var out;\n  switch (type) {\n    case 'unit':\n      out = tests.filter(function (t) {\n        return t.context.match('Unit Tests');\n      });\n      break;\n    case 'functional':\n      out = tests.filter(function (t) {\n        return t.context.match('Functional Tests') && !t.title.match('#example');\n      });\n      break;\n    default:\n      out = tests;\n  }\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZjY3Rlc3RpbmcuanMiXSwibmFtZXMiOlsiY29ycyIsInJlcXVpcmUiLCJmcyIsInJ1bm5lciIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJyb3V0ZSIsImdldCIsInJlcSIsInJlcyIsIm5leHQiLCJjb25zb2xlIiwibG9nIiwicmVhZEZpbGUiLCJfX2Rpcm5hbWUiLCJlcnIiLCJkYXRhIiwic2VuZCIsInRvU3RyaW5nIiwidHlwZSIsImVycm9yIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwianNvbiIsInN0YXR1cyIsInJlcG9ydCIsInRlc3RGaWx0ZXIiLCJxdWVyeSIsIm4iLCJvbiIsIm5leHRUaWNrIiwiaHMiLCJPYmplY3QiLCJrZXlzIiwiX2hlYWRlcnMiLCJmaWx0ZXIiLCJoIiwibWF0Y2giLCJoT2JqIiwiZm9yRWFjaCIsImhlYWRlcnMiLCJ0ZXN0cyIsIm91dCIsInQiLCJjb250ZXh0IiwidGl0bGUiLCJ1bmRlZmluZWQiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkE7O0FBRUEsSUFBSUEsT0FBT0MsUUFBUSxNQUFSLENBQVg7QUFDQSxJQUFJQyxLQUFLRCxRQUFRLElBQVIsQ0FBVDtBQUNBLElBQUlFLFNBQVNGLFFBQVEsZ0JBQVIsQ0FBYjs7QUFFQUcsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWU7O0FBRTlCQSxNQUFJQyxLQUFKLENBQVUsaUJBQVYsRUFDR0MsR0FESCxDQUNPLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDNUJDLFlBQVFDLEdBQVIsQ0FBWSxXQUFaO0FBQ0FYLE9BQUdZLFFBQUgsQ0FBWUMsWUFBWSxZQUF4QixFQUFzQyxVQUFTQyxHQUFULEVBQWNDLElBQWQsRUFBb0I7QUFDeEQsVUFBR0QsR0FBSCxFQUFRLE9BQU9MLEtBQUtLLEdBQUwsQ0FBUDtBQUNSTixVQUFJUSxJQUFKLENBQVNELEtBQUtFLFFBQUwsRUFBVDtB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U1osVUFBVCxDQUFvQmUsS0FBcEIsRUFBMkJ2QixJQUEzQixFQUFpQ1UsQ0FBakMsRUFBb0M7QUFDbEMsTUFBSWMsR0FBSjtBQUNBLFVBQVF4QixJQUFSO0FBQ0UsU0FBSyxNQUFMO0FBQ0V3QixZQUFNRCxNQUFNTixNQUFOLENBQWE7QUFBQSxlQUFLUSxFQUFFQyxPQUFGLENBQVVQLEtBQVYsQ0FBZ0IsWUFBaEIsQ0FBTDtBQUFBLE9BQWIsQ0FBTjtBQUNBO0FBQ0YsU0FBSyxZQUFMO0FBQ0VLLFlBQU1ELE1BQU1OLE1BQU4sQ0FBYTtBQUFBLGVBQUtRLEVBQUVDLE9BQUYsQ0FBVVAsS0FBVixDQUFnQixrQkFBaEIsS0FBdUMsQ0FBQ00sRUFBRUUsS0FBRixDQUFRUixLQUFSLENBQWMsVUFBZCxDQUE3QztBQUFBLE9BQWIsQ0FBTjtBQUNBO0FBQ0Y7QUFDRUssWUFBTUQsS0FBTjtBQVJKO0FBVUEsTUFBR2IsTUFBTWtCLFNBQVQsRUFBb0I7QUFDbEIsV0FBT0osSUFBSWQsQ0FBSixLQUFVYyxHQUFqQjtBQUNEO0FBQ0QsU0FBT0EsR0FBUDtBQUNEIiwiZmlsZSI6ImZjY3Rlc3RpbmcuanMiLCJzb3VyY2VSb290IjoiL2FwcC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKiAgICAgICBETyBOT1QgRURJVCBUSElTIEZJTEVcbiogICAgICAgRm9yIEZDQyB0ZXN0aW5nIHB1cnBvc2VzIVxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKlxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKTtcbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG52YXIgcnVubmVyID0gcmVxdWlyZSgnLi4vdGVzdC1ydW5uZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXBwKSB7XG5cbiAgYXBwLnJvdXRlKCcvX2FwaS9zZXJ2ZXIuanMnKVxuICAgIC5nZXQoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdyZXF1ZXN0ZWQnKTtcbiAgICAgIGZzLnJlYWRGaWxlKF9fZGlybmFtZSArICcvc2VydmVyLmpzJywgZnVuY3Rpb24oZXJyLCBkYXRhKSB7XG4gICAgICAgIGlmKGVycikgcmV0dXJuIG5leHQoZXJyKTtcbiAgICAgICAgcmVzLnNlbmQoZGF0YS50b1N0cmluZygpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICBhcHAucm91dGUoJy9fYXBpL3JvdXRlcy9hcGkuanMnKVxuICAgIC5nZXQoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdyZXF1ZXN0ZWQnKTtcbiAgICAgIGZzLnJlYWRGaWxlKF9fZGlybmFtZSArICcvcm91dGVzL2FwaS5qcycsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBpZihlcnIpIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgIHJlcy50eXBlKCd0eHQnKS5zZW5kKGRhdGEudG9TdHJpbmcoKSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgYXBwLnJvdXRlKCcvX2FwaS9jb250cm9sbGVycy9jb252ZXJ0SGFuZGxlci5qcycpXG4gICAgLmdldChmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICAgICAgY29uc29sZS5sb2coJ3JlcXVlc3RlZCcpO1xuICAgICAgZnMucmVhZEZpbGUoX19kaXJuYW1lICsgJy9jb250cm9sbGVycy9jb252ZXJ0SGFuZGxlci5qcycsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBpZihlcnIpIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgIHJlcy50eXBlKCd0eHQnKS5zZW5kKGRhdGEudG9TdHJpbmcoKSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBcbiAgdmFyIGVycm9yO1xuICBhcHAuZ2V0KCcvX2FwaS9nZXQtdGVzdHMnLCBjb3JzKCksIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KXtcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XG4gICAgaWYoIWVycm9yICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAndGVzdCcpIHJldHVybiBuZXh0KCk7XG4gICAgcmVzLmpzb24oe3N0YXR1czogJ3VuYXZhaWxhYmxlJ30pO1xuICB9LFxuICBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCl7XG4gICAgaWYoIXJ1bm5lci5yZXBvcnQpIHJldHVybiBuZXh0KCk7XG4gICAgcmVzLmpzb24odGVzdEZpbHRlcihydW5uZXIucmVwb3J0LCByZXEucXVlcnkudHlwZSwgcmVxLnF1ZXJ5Lm4pKTtcbiAgfSxcbiAgZnVuY3Rpb24ocmVxLCByZXMpe1xuICAgIHJ1bm5lci5vbignZG9uZScsIGZ1bmN0aW9uKHJlcG9ydCl7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKCgpID0+ICByZXMuanNvbih0ZXN0RmlsdGVyKHJ1bm5lci5yZXBvcnQsIHJlcS5xdWVyeS50eXBlLCByZXEucXVlcnkubikpKTtcbiAgICB9KTtcbiAgfSk7XG4gIGFwcC5nZXQoJy9fYXBpL2FwcC1pbmZvJywgZnVuY3Rpb24ocmVxLCByZXMpIHtcbiAgICB2YXIgaHMgPSBPYmplY3Qua2V5cyhyZXMuX2hlYWRlcnMpXG4gICAgICAuZmlsdGVyKGggPT4gIWgubWF0Y2goL15hY2Nlc3MtY29udHJvbC1cXHcrLykpO1xuICAgIHZhciBoT2JqID0ge307XG4gICAgaHMuZm9yRWFjaChoID0+IHtoT2JqW2hdID0gcmVzLl9oZWFkZXJzW2hdfSk7XG4gICAgZGVsZXRlIHJlcy5faGVhZGVyc1snc3RyaWN0LXRyYW5zcG9ydC1zZWN1cml0eSddO1xuICAgIHJlcy5qc29uKHtoZWFkZXJzOiBoT2JqfSk7XG4gIH0pO1xuICBcbn07XG5cbmZ1bmN0aW9uIHRlc3RGaWx0ZXIodGVzdHMsIHR5cGUsIG4pIHtcbiAgdmFyIG91dDtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAndW5pdCcgOlxuICAgICAgb3V0ID0gdGVzdHMuZmlsdGVyKHQgPT4gdC5jb250ZXh0Lm1hdGNoKCdVbml0IFRlc3RzJykpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZnVuY3Rpb25hbCc6XG4gICAgICBvdXQgPSB0ZXN0cy5maWx0ZXIodCA9PiB0LmNvbnRleHQubWF0Y2goJ0Z1bmN0aW9uYWwgVGVzdHMnKSAmJiAhdC50aXRsZS5tYXRjaCgnI2V4YW1wbGUnKSk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgb3V0ID0gdGVzdHM7XG4gIH1cbiAgaWYobiAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIG91dFtuXSB8fCBvdXQ7XG4gIH1cbiAgcmV0dXJuIG91dDtcbn0iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "fcctesting.js"
      ],
      "names": [
        "cors",
        "require",
        "fs",
        "runner",
        "module",
        "exports",
        "app",
        "route",
        "get",
        "req",
        "res",
        "next",
        "console",
        "log",
        "readFile",
        "__dirname",
        "err",
        "data",
        "send",
        "toString",
        "type",
        "error",
        "process",
        "env",
        "NODE_ENV",
        "json",
        "status",
        "report",
        "testFilter",
        "query",
        "n",
        "on",
        "nextTick",
        "hs",
        "Object",
        "keys",
        "_headers",
        "filter",
        "h",
        "match",
        "hObj",
        "forEach",
        "headers",
        "tests",
        "out",
        "t",
        "context",
        "title",
        "undefined"
      ],
      "mappings": "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",
      "file": "fcctesting.js",
      "sourceRoot": "/app/routes",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nvar cors = require('cors');\nvar fs = require('fs');\nvar runner = require('../test-runner');\n\nmodule.exports = function (app) {\n\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/server.js', function(err, data) {\n        if(err) return next(err);\n        res.send(data.toString());\n      });\n    });\n  app.route('/_api/routes/api.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/routes/api.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n  app.route('/_api/controllers/convertHandler.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function(err, data) {\n        if(err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n    \n  var error;\n  app.get('/_api/get-tests', cors(), function(req, res, next){\n    console.log(error);\n    if(!error && process.env.NODE_ENV === 'test') return next();\n    res.json({status: 'unavailable'});\n  },\n  function(req, res, next){\n    if(!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  },\n  function(req, res){\n    runner.on('done', function(report){\n      process.nextTick(() =>  res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function(req, res) {\n    var hs = Object.keys(res._headers)\n      .filter(h => !h.match(/^access-control-\\w+/));\n    var hObj = {};\n    hs.forEach(h => {hObj[h] = res._headers[h]});\n    delete res._headers['strict-transport-security'];\n    res.json({headers: hObj});\n  });\n  \n};\n\nfunction testFilter(tests, type, n) {\n  var out;\n  switch (type) {\n    case 'unit' :\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if(n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}"
      ]
    },
    "mtime": 1547499196000
  },
  "{\"filename\":\"/app/test-runner.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1:test": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/test-runner.js",
      "filenameRelative": "/app/test-runner.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "test-runner.js",
      "sourceFileName": "test-runner.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "test-runner"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nvar analyser = require('./assertion-analyser');\nvar EventEmitter = require('events').EventEmitter;\n\nvar Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n\nvar mocha = new Mocha();\nvar testDir = './tests';\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function (file) {\n  // Only keep the .js files\n  return file.substr(-3) === '.js';\n}).forEach(function (file) {\n  mocha.addFile(path.join(testDir, file));\n});\n\nvar emitter = new EventEmitter();\nemitter.run = function () {\n\n  var tests = [];\n  var context = \"\";\n  var separator = ' -> ';\n  // Run the tests.\n  try {\n    var runner = mocha.ui('tdd').run().on('test end', function (test) {\n      // remove comments\n      var body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n      // collapse spaces\n      body = body.replace(/\\s+/g, ' ');\n      var obj = {\n        title: test.title,\n        context: context.slice(0, -separator.length),\n        state: test.state,\n        // body: body,\n        assertions: analyser(body)\n      };\n      tests.push(obj);\n    }).on('end', function () {\n      emitter.report = tests;\n      emitter.emit('done', tests);\n    }).on('suite', function (s) {\n      context += s.title + separator;\n    }).on('suite end', function (s) {\n      context = context.slice(0, -(s.title.length + separator.length));\n    });\n  } catch (e) {\n    throw e;\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcnVubmVyLmpzIl0sIm5hbWVzIjpbImFuYWx5c2VyIiwicmVxdWlyZSIsIkV2ZW50RW1pdHRlciIsIk1vY2hhIiwiZnMiLCJwYXRoIiwibW9jaGEiLCJ0ZXN0RGlyIiwicmVhZGRpclN5bmMiLCJmaWx0ZXIiLCJmaWxlIiwic3Vic3RyIiwiZm9yRWFjaCIsImFkZEZpbGUiLCJqb2luIiwiZW1pdHRlciIsInJ1biIsInRlc3RzIiwiY29udGV4dCIsInNlcGFyYXRvciIsInJ1bm5lciIsInVpIiwib24iLCJ0ZXN0IiwiYm9keSIsInJlcGxhY2UiLCJvYmoiLCJ0aXRsZSIsInNsaWNlIiwibGVuZ3RoIiwic3RhdGUiLCJhc3NlcnRpb25zIiwicHVzaCIsInJlcG9ydCIsImVtaXQiLCJzIiwiZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQSxJQUFJQSxXQUFXQyxRQUFRLHNCQUFSLENBQWY7QUFDQSxJQUFJQyxlQUFlRCxRQUFRLFFBQVIsRUFBa0JDLFlBQXJDOztBQUVBLElBQUlDLFFBQVFGLFFBQVEsT0FBUixDQUFaO0FBQUEsSUFDSUcsS0FBS0gsUUFBUSxJQUFSLENBRFQ7QUFBQSxJQUVJSSxPQUFPSixRQUFRLE1BQVIsQ0FGWDs7QUFJQSxJQUFJSyxRQUFRLElBQUlILEtBQUosRUFBWjtBQUNBLElBQUlJLFVBQVUsU0FBZDs7QUFHQTtBQUNBSCxHQUFHSSxXQUFILENBQWVELE9BQWYsRUFBd0JFLE1BQXhCLENBQStCLFVBQVNDLElBQVQsRUFBYztBQUN6QztBQUNBLFNBQU9BLEtBQUtDLE1BQUwsQ0FBWSxDQUFDLENBQWIsTUFBb0IsS0FBM0I7QUFFSCxDQUpELEVBSUdDLE9BSkgsQ0FJVyxVQUFTRixJQUFULEVBQWM7QUFDckJKLFFBQU1PLE9BQU4sQ0FDSVIsS0FBS1MsSUFBTCxDQUFVUCxPQUFWLEVBQW1CRyxJQUFuQixDQURKO0FBR0gsQ0FSRDs7QUFVQSxJQUFJSyxVQUFVLElBQUliLFlBQUosRUFBZDtBQUNBYSxRQUFRQyxHQUFSLEdBQWMsWUFBVzs7QUFFdkIsTUFBSUMsUUFBUSxFQUFaO0FBQ0EsTUFBSUMsVUFBVSxFQUFkO0FBQ0EsTUFBSUMsWUFBWSxNQUFoQjtBQUNBO0FBQ0EsTUFBSTtBQUNKLFFBQUlDLFNBQVNkLE1BQU1lLEVBQU4sQ0FBUyxLQUFULEVBQWdCTCxHQUFoQixHQUNWTSxFQURVLENBQ1AsVUFETyxFQUNLLFVBQVNDLElBQVQsRUFBZTtBQUMzQjtBQUNBLFVBQUlDLE9BQU9ELEtBQUtDLElBQUwsQ0FBVUMsT0FBVixDQUFrQixzQkFBbEIsRUFBMEMsRUFBMUMsQ0FBWDtBQUNBO0FBQ0FELGFBQU9BLEtBQUtDLE9BQUwsQ0FBYSxNQUFiLEVBQW9CLEdBQXBCLENBQVA7QUFDQSxVQUFJQyxNQUFNO0FBQ1JDLGVBQU9KLEtBQUtJLEtBREo7QUFFUlQsaUJBQVNBLFFBQVFVLEtBQVIsQ0FBYyxDQUFkLEVBQWlCLENBQUNULFVBQVVVLE1BQTVCLENBRkQ7QUFHUkMsZUFBT1AsS0FBS08sS0FISjtBQUlSO0FBQ0FDLG9CQUFZL0IsU0FBU3dCLElBQVQ7QUFMSixPQUFWO0FBT0FQLFlBQU1lLElBQU4sQ0FBV04sR0FBWDtBQUNILEtBZFUsRUFlVkosRUFmVSxDQWVQLEtBZk8sRUFlQSxZQUFXO0FBQ2xCUCxjQUFRa0IsTUFBUixHQUFpQmhCLEtBQWpCO0FBQ0FGLGNBQVFtQixJQUFSLENBQWEsTUFBYixFQUFxQmpCLEtBQXJCO0FBQ0gsS0FsQlUsRUFtQlZLLEVBbkJVLENBbUJQLE9BbkJPLEVBbUJFLFVBQVNhLENBQVQsRUFBWTtBQUN2QmpCLGlCQUFZaUIsRUFBRVIsS0FBRixHQUFVUixTQUF0QjtBQUVELEtBdEJVLEVBdUJWRyxFQXZCVSxDQXVCUCxXQXZCTyxFQXVCTSxVQUFTYSxDQUFULEVBQVk7QUFDM0JqQixnQkFBVUEsUUFBUVUsS0FBUixDQUFjLENBQWQsRUFBaUIsRUFBRU8sRUFBRVIsS0FBRixDQUFRRSxNQUFSLEdBQWlCVixVQUFVVSxNQUE3QixDQUFqQixDQUFWO0FBQ0QsS0F6QlUsQ0FBYjtBQTBCQyxHQTNCRCxDQTJCRSxPQUFNTyxDQUFOLEVBQVM7QUFDVCxVQUFNQSxDQUFOO0FBQ0Q7QUFDRixDQXBDRDs7QUFzQ0FDLE9BQU9DLE9BQVAsR0FBaUJ2QixPQUFqQjs7QUFFQSIsImZpbGUiOiJ0ZXN0LXJ1bm5lci5qcyIsInNvdXJjZVJvb3QiOiIvYXBwIiwic291cmNlc0NvbnRlbnQiOlsiLypcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiogICAgICAgRE8gTk9UIEVESVQgVEhJUyBGSUxFXG4qICAgICAgIEZvciBGQ0MgdGVzdGluZyBwdXJwb3NlcyFcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiovXG5cbnZhciBhbmFseXNlciA9IHJlcXVpcmUoJy4vYXNzZXJ0aW9uLWFuYWx5c2VyJyk7XG52YXIgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnZXZlbnRzJykuRXZlbnRFbWl0dGVyO1xuXG52YXIgTW9jaGEgPSByZXF1aXJlKCdtb2NoYScpLFxuICAgIGZzID0gcmVxdWlyZSgnZnMnKSxcbiAgICBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuXG52YXIgbW9jaGEgPSBuZXcgTW9jaGEoKTtcbnZhciB0ZXN0RGlyID0gJy4vdGVzdHMnXG5cblxuLy8gQWRkIGVhY2ggLmpzIGZpbGUgdG8gdGhlIG1vY2hhIGluc3RhbmNlXG5mcy5yZWFkZGlyU3luYyh0ZXN0RGlyKS5maWx0ZXIoZnVuY3Rpb24oZmlsZSl7XG4gICAgLy8gT25seSBrZWVwIHRoZSAuanMgZmlsZXNcbiAgICByZXR1cm4gZmlsZS5zdWJzdHIoLTMpID09PSAnLmpzJztcblxufSkuZm9yRWFjaChmdW5jdGlvbihmaWxlKXtcbiAgICBtb2NoYS5hZGRGaWxlKFxuICAgICAgICBwYXRoLmpvaW4odGVzdERpciwgZmlsZSlcbiAgICApO1xufSk7XG5cbnZhciBlbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpOyAgXG5lbWl0dGVyLnJ1biA9IGZ1bmN0aW9uKCkge1xuXG4gIHZhciB0ZXN0cyA9IFtdO1xuICB2YXIgY29udGV4dCA9IFwiXCI7XG4gIHZhciBzZXBhcmF0b3IgPSAnIC0+ICc7XG4gIC8vIFJ1biB0aGUgdGVzdHMuXG4gIHRyeSB7XG4gIHZhciBydW5uZXIgPSBtb2NoYS51aSgndGRkJykucnVuKClcbiAgICAub24oJ3Rlc3QgZW5kJywgZnVuY3Rpb24odGVzdCkge1xuICAgICAgICAvLyByZW1vdmUgY29tbWVudHNcbiAgICAgICAgdmFyIGJvZHkgPSB0ZXN0LmJvZHkucmVwbGFjZSgvXFwvXFwvLipcXG58XFwvXFwqLipcXCpcXC8vZywgJycpO1xuICAgICAgICAvLyBjb2xsYXBzZSBzcGFjZXNcbiAgICAgICAgYm9keSA9IGJvZHkucmVwbGFjZSgvXFxzKy9nLCcgJyk7XG4gICAgICAgIHZhciBvYmogPSB7XG4gICAgICAgICAgdGl0bGU6IHRlc3QudGl0bGUsXG4gICAgICAgICAgY29udGV4dDogY29udGV4dC5zbGljZSgwLCAtc2VwYXJhdG9yLmxlbmd0aCksXG4gICAgICAgICAgc3RhdGU6IHRlc3Quc3RhdGUsXG4gICAgICAgICAgLy8gYm9keTogYm9keSxcbiAgICAgICAgICBhc3NlcnRpb25zOiBhbmFseXNlcihib2R5KVxuICAgICAgICB9O1xuICAgICAgICB0ZXN0cy5wdXNoKG9iaik7XG4gICAgfSlcbiAgICAub24oJ2VuZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICBlbWl0dGVyLnJlcG9ydCA9IHRlc3RzO1xuICAgICAgICBlbWl0dGVyLmVtaXQoJ2RvbmUnLCB0ZXN0cylcbiAgICB9KVxuICAgIC5vbignc3VpdGUnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ICs9IChzLnRpdGxlICsgc2VwYXJhdG9yKTtcblxuICAgIH0pXG4gICAgLm9uKCdzdWl0ZSBlbmQnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5zbGljZSgwLCAtKHMudGl0bGUubGVuZ3RoICsgc2VwYXJhdG9yLmxlbmd0aCkpXG4gICAgfSlcbiAgfSBjYXRjaChlKSB7XG4gICAgdGhyb3coZSk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1pdHRlcjtcblxuLypcbiAqIE1vY2hhLnJ1bm5lciBFdmVudHM6XG4gKiBjYW4gYmUgdXNlZCB0byBidWlsZCBhIGJldHRlciBjdXN0b20gcmVwb3J0XG4gKlxuICogICAtIGBzdGFydGAgIGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYGVuZGAgIGV4ZWN1dGlvbiBjb21wbGV0ZVxuICogICAtIGBzdWl0ZWAgIChzdWl0ZSkgdGVzdCBzdWl0ZSBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBzdWl0ZSBlbmRgICAoc3VpdGUpIGFsbCB0ZXN0cyAoYW5kIHN1Yi1zdWl0ZXMpIGhhdmUgZmluaXNoZWRcbiAqICAgLSBgdGVzdGAgICh0ZXN0KSB0ZXN0IGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYHRlc3QgZW5kYCAgKHRlc3QpIHRlc3QgY29tcGxldGVkXG4gKiAgIC0gYGhvb2tgICAoaG9vaykgaG9vayBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBob29rIGVuZGAgIChob29rKSBob29rIGNvbXBsZXRlXG4gKiAgIC0gYHBhc3NgICAodGVzdCkgdGVzdCBwYXNzZWRcbiAqICAgLSBgZmFpbGAgICh0ZXN0LCBlcnIpIHRlc3QgZmFpbGVkXG4gKiAgIC0gYHBlbmRpbmdgICAodGVzdCkgdGVzdCBwZW5kaW5nXG4gKi8iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "test-runner.js"
      ],
      "names": [
        "analyser",
        "require",
        "EventEmitter",
        "Mocha",
        "fs",
        "path",
        "mocha",
        "testDir",
        "readdirSync",
        "filter",
        "file",
        "substr",
        "forEach",
        "addFile",
        "join",
        "emitter",
        "run",
        "tests",
        "context",
        "separator",
        "runner",
        "ui",
        "on",
        "test",
        "body",
        "replace",
        "obj",
        "title",
        "slice",
        "length",
        "state",
        "assertions",
        "push",
        "report",
        "emit",
        "s",
        "e",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,IAAIA,WAAWC,QAAQ,sBAAR,CAAf;AACA,IAAIC,eAAeD,QAAQ,QAAR,EAAkBC,YAArC;;AAEA,IAAIC,QAAQF,QAAQ,OAAR,CAAZ;AAAA,IACIG,KAAKH,QAAQ,IAAR,CADT;AAAA,IAEII,OAAOJ,QAAQ,MAAR,CAFX;;AAIA,IAAIK,QAAQ,IAAIH,KAAJ,EAAZ;AACA,IAAII,UAAU,SAAd;;AAGA;AACAH,GAAGI,WAAH,CAAeD,OAAf,EAAwBE,MAAxB,CAA+B,UAASC,IAAT,EAAc;AACzC;AACA,SAAOA,KAAKC,MAAL,CAAY,CAAC,CAAb,MAAoB,KAA3B;AAEH,CAJD,EAIGC,OAJH,CAIW,UAASF,IAAT,EAAc;AACrBJ,QAAMO,OAAN,CACIR,KAAKS,IAAL,CAAUP,OAAV,EAAmBG,IAAnB,CADJ;AAGH,CARD;;AAUA,IAAIK,UAAU,IAAIb,YAAJ,EAAd;AACAa,QAAQC,GAAR,GAAc,YAAW;;AAEvB,MAAIC,QAAQ,EAAZ;AACA,MAAIC,UAAU,EAAd;AACA,MAAIC,YAAY,MAAhB;AACA;AACA,MAAI;AACJ,QAAIC,SAASd,MAAMe,EAAN,CAAS,KAAT,EAAgBL,GAAhB,GACVM,EADU,CACP,UADO,EACK,UAASC,IAAT,EAAe;AAC3B;AACA,UAAIC,OAAOD,KAAKC,IAAL,CAAUC,OAAV,CAAkB,sBAAlB,EAA0C,EAA1C,CAAX;AACA;AACAD,aAAOA,KAAKC,OAAL,CAAa,MAAb,EAAoB,GAApB,CAAP;AACA,UAAIC,MAAM;AACRC,eAAOJ,KAAKI,KADJ;AAERT,iBAASA,QAAQU,KAAR,CAAc,CAAd,EAAiB,CAACT,UAAUU,MAA5B,CAFD;AAGRC,eAAOP,KAAKO,KAHJ;AAIR;AACAC,oBAAY/B,SAASwB,IAAT;AALJ,OAAV;AAOAP,YAAMe,IAAN,CAAWN,GAAX;AACH,KAdU,EAeVJ,EAfU,CAeP,KAfO,EAeA,YAAW;AAClBP,cAAQkB,MAAR,GAAiBhB,KAAjB;AACAF,cAAQmB,IAAR,CAAa,MAAb,EAAqBjB,KAArB;AACH,KAlBU,EAmBVK,EAnBU,CAmBP,OAnBO,EAmBE,UAASa,CAAT,EAAY;AACvBjB,iBAAYiB,EAAER,KAAF,GAAUR,SAAtB;AAED,KAtBU,EAuBVG,EAvBU,CAuBP,WAvBO,EAuBM,UAASa,CAAT,EAAY;AAC3BjB,gBAAUA,QAAQU,KAAR,CAAc,CAAd,EAAiB,EAAEO,EAAER,KAAF,CAAQE,MAAR,GAAiBV,UAAUU,MAA7B,CAAjB,CAAV;AACD,KAzBU,CAAb;AA0BC,GA3BD,CA2BE,OAAMO,CAAN,EAAS;AACT,UAAMA,CAAN;AACD;AACF,CApCD;;AAsCAC,OAAOC,OAAP,GAAiBvB,OAAjB;;AAEA",
      "file": "test-runner.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nvar analyser = require('./assertion-analyser');\nvar EventEmitter = require('events').EventEmitter;\n\nvar Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n\nvar mocha = new Mocha();\nvar testDir = './tests'\n\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function(file){\n    // Only keep the .js files\n    return file.substr(-3) === '.js';\n\n}).forEach(function(file){\n    mocha.addFile(\n        path.join(testDir, file)\n    );\n});\n\nvar emitter = new EventEmitter();  \nemitter.run = function() {\n\n  var tests = [];\n  var context = \"\";\n  var separator = ' -> ';\n  // Run the tests.\n  try {\n  var runner = mocha.ui('tdd').run()\n    .on('test end', function(test) {\n        // remove comments\n        var body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n        // collapse spaces\n        body = body.replace(/\\s+/g,' ');\n        var obj = {\n          title: test.title,\n          context: context.slice(0, -separator.length),\n          state: test.state,\n          // body: body,\n          assertions: analyser(body)\n        };\n        tests.push(obj);\n    })\n    .on('end', function() {\n        emitter.report = tests;\n        emitter.emit('done', tests)\n    })\n    .on('suite', function(s) {\n      context += (s.title + separator);\n\n    })\n    .on('suite end', function(s) {\n      context = context.slice(0, -(s.title.length + separator.length))\n    })\n  } catch(e) {\n    throw(e);\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */"
      ]
    },
    "mtime": 1547499154000
  },
  "{\"filename\":\"/app/assertion-analyser.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1:test": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/assertion-analyser.js",
      "filenameRelative": "/app/assertion-analyser.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "assertion-analyser.js",
      "sourceFileName": "assertion-analyser.js",
      "sourceRoot": "/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "assertion-analyser"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  var openSym = ['[', '{', '\"', \"'\", '('];\n  var closeSym = [']', '}', '\"', \"'\", ')'];\n  var type;\n  for (var i = init || 0; i < str.length; i++) {\n    type = openSym.indexOf(str[i]);\n    if (type !== -1) break;\n  }\n  if (type === -1) return null;\n  var open = openSym[type];\n  var close = closeSym[type];\n  var count = 1;\n  for (var k = i + 1; k < str.length; k++) {\n    if (open === '\"' || open === \"'\") {\n      if (str[k] === close) count--;\n      if (str[k] === '\\\\') k++;\n    } else {\n      if (str[k] === open) count++;\n      if (str[k] === close) count--;\n    }\n    if (count === 0) break;\n  }\n  if (count !== 0) return null;\n  var obj = str.slice(i, k + 1);\n  return {\n    start: i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  var obj;\n  var cnt = 0;\n  var data = [];\n  while (obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end + 1);\n  }\n  return {\n    str: str,\n    dictionary: data\n  };\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  var strObj = replacer(str);\n  var args = strObj.str.split(',');\n  args = args.map(function (a) {\n    var m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  });\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n\n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n\n  if (!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  var body = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)[0];\n  var s = replacer(body);\n  // split on 'assertion'\n  var splittedAssertions = s.str.split('assert');\n  var assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  var assertionBodies = [];\n  var methods = assertions.map(function (a, i) {\n    var m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    var pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if (methods.some(function (m) {\n    return !m;\n  })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  var bodies = assertionBodies.map(function (b) {\n    return s.dictionary[b].slice(1, -1).trim();\n  });\n  assertions = methods.map(function (m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    };\n  });\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "assertion-analyser.js"
      ],
      "names": [
        "objParser",
        "str",
        "init",
        "openSym",
        "closeSym",
        "type",
        "i",
        "length",
        "indexOf",
        "open",
        "close",
        "count",
        "k",
        "obj",
        "slice",
        "start",
        "end",
        "replacer",
        "cnt",
        "data",
        "substring",
        "dictionary",
        "splitter",
        "strObj",
        "args",
        "split",
        "map",
        "a",
        "m",
        "match",
        "replace",
        "trim",
        "assertionAnalyser",
        "body",
        "s",
        "splittedAssertions",
        "assertions",
        "assertionBodies",
        "methods",
        "push",
        "parseInt",
        "pre",
        "some",
        "bodies",
        "b",
        "method",
        "module",
        "exports"
      ],
      "mappings": "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",
      "file": "assertion-analyser.js",
      "sourceRoot": "/app",
      "sourcesContent": [
        "/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  var openSym = ['[', '{', '\"', \"'\", '('];\n  var closeSym = [']', '}', '\"', \"'\", ')'];\n  var type;\n  for(var i = (init || 0); i < str.length; i++ ) {\n    type = openSym.indexOf(str[i]);\n    if( type !== -1)  break;\n  }\n  if (type === -1) return null;\n  var open = openSym[type];\n  var close = closeSym[type];\n  var count = 1;\n  for(var k = i+1; k < str.length; k++) {\n    if(open === '\"' || open === \"'\") {\n      if(str[k] === close) count--;\n      if(str[k] === '\\\\') k++;\n    } else {\n      if(str[k] === open) count++;\n      if(str[k] === close) count--;\n    }\n    if(count === 0) break;\n  }\n  if(count !== 0) return null;\n  var obj = str.slice(i, k+1);\n  return {\n    start : i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  var obj;\n  var cnt = 0;\n  var data = [];\n  while(obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end+1)\n  }\n  return {\n    str : str,\n    dictionary : data\n  }\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  var strObj = replacer(str);\n  var args = strObj.str.split(',');\n  args = args.map(function(a){\n    var m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  })\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  \n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  \n  if(!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  var body = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)[0];\n  var s = replacer(body);\n  // split on 'assertion'\n  var splittedAssertions = s.str.split('assert');\n  var assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  var assertionBodies = [];\n  var methods = assertions.map(function(a, i){\n    var m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    var pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if(methods.some(function(m){ return !m })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  var bodies = assertionBodies.map(function(b){\n    return s.dictionary[b].slice(1,-1).trim();\n  });\n  assertions = methods.map(function(m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    }\n  })\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n"
      ]
    },
    "mtime": 1547499168000
  },
  "{\"filename\":\"/app/tests/2_functional-tests.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}],[[],{\"spec\":false,\"loose\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/app/tests\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.24.1:test": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/app/tests/2_functional-tests.js",
      "filenameRelative": "/app/tests/2_functional-tests.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ],
        [
          [],
          {
            "spec": false,
            "loose": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "2_functional-tests.js",
      "sourceFileName": "2_functional-tests.js",
      "sourceRoot": "/app/tests",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/app/tests",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "2_functional-tests"
    },
    "ignored": false,
    "code": "'use strict';\n\n/*\n*\n*\n*       FILL IN EACH FUNCTIONAL TEST BELOW COMPLETELY\n*       -----[Keep the tests in the same order!]-----\n*       (if additional are added, keep them at the very end!)\n*/\n\nvar chaiHttp = require('chai-http');\nvar chai = require('chai');\nvar assert = chai.assert;\nvar server = require('../server');\n\nchai.use(chaiHttp);\n\nsuite('Functional Tests', function () {\n\n  suite('API ROUTING FOR /api/threads/:board', function () {\n\n    /*test('POST', (done) => {\n      chai.request(server)\n      .post('/api/threads/sports')\n      .send({text: 'Chai testing post', delete_password: 'chai'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n\n    /*test('GET', (done) => {\n      chai.request(server)\n      .get('/api/threads/general')\n      .end((err, res) => {\n        let { threads } = res.body;\n        \n        assert.equal(res.status, 200);\n        \n        assert.isArray(threads);\n        assert.isAtMost(threads.length, 10);\n        \n        threads.forEach(thread => {\n          assert.isAtMost(thread.replies.length, 3);\n          \n          assert.notProperty(thread, 'delete_password');\n          assert.notProperty(thread, 'reported');\n          \n          if (thread.replies.length) {\n            thread.replies.forEach(reply => {\n              assert.notProperty(reply, 'delete_password');\n              assert.notProperty(reply, 'reported');\n            });\n          }\n        });\n        done();\n      });\n    });*/\n\n    //test correct pw\n    /*test('DELETE', (done) => {\n      chai.request(server)\n      .delete('/api/threads/politics')\n      .send({thread_id: '5c5605628ff68f4393b767d0', delete_password: 'pw'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.message, 'Success');\n        done();\n      });\n    });*/\n\n    //test incorrect pw\n    /*test('DELETE', (done) => {\n      chai.request(server)\n      .delete('/api/threads/politics')\n      .send({thread_id: '5c5605e25b9bc446eddf7fc9', delete_password: '123'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.message, 'Incorrect Password');\n        done();\n      });\n    });*/\n\n    /*test('PUT', (done) => {\n      chai.request(server)\n      .put('/api/threads/politics')\n      .send({thread_id: '5c50d13a2bdb27396fab797f'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.message, 'Success');\n        done();\n      });\n    });*/\n\n  });\n\n  suite('API ROUTING FOR /api/replies/:board', function () {\n\n    /*test('POST', (done) => {\n      chai.request(server)\n      .post('/api/replies/politics')\n      .send({\n        thread_id: '5c5605e25b9bc446eddf7fc9', \n        text: 'chai testing text', \n        delete_password: 'chai'\n      })\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n\n    suite('GET', function (done) {\n      chai.request(server).get('/api/replies/general?thread_id=5c3d13b96cde9102677e3340').end(function (err, res) {\n        console.log(res.body);\n        assert.equal(res.status, 200);\n        done();\n      });\n    });\n\n    /*suite('PUT', (done) => {\n      chai.request(server)\n      .put('/api/replies/general')\n      .send()\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n\n    /*suite('DELETE', (done) => {\n      chai.request(server)\n      .delete('/api/replies/general')\n      .send()\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjJfZnVuY3Rpb25hbC10ZXN0cy5qcyJdLCJuYW1lcyI6WyJjaGFpSHR0cCIsInJlcXVpcmUiLCJjaGFpIiwiYXNzZXJ0Iiwic2VydmVyIiwidXNlIiwic3VpdGUiLCJkb25lIiwicmVxdWVzdCIsImdldCIsImVuZCIsImVyciIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwiZXF1YWwiLCJzdGF0dXMiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7Ozs7O0FBUUEsSUFBSUEsV0FBV0MsUUFBUSxXQUFSLENBQWY7QUFDQSxJQUFJQyxPQUFPRCxRQUFRLE1BQVIsQ0FBWDtBQUNBLElBQUlFLFNBQVNELEtBQUtDLE1BQWxCO0FBQ0EsSUFBSUMsU0FBU0gsUUFBUSxXQUFSLENBQWI7O0FBRUFDLEtBQUtHLEdBQUwsQ0FBU0wsUUFBVDs7QUFFQU0sTUFBTSxrQkFBTixFQUEwQixZQUFNOztBQUk5QkEsUUFBTSxxQ0FBTixFQUE2QyxZQUFNOztBQUVqRDs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBO0FBQ0E7Ozs7Ozs7Ozs7O0FBV0E7QUFDQTs7Ozs7Ozs7Ozs7QUFhQTs7Ozs7Ozs7Ozs7QUFZRCxHQTlFRDs7QUFvRkFBLFFBQU0scUNBQU4sRUFBNkMsWUFBTTs7QUFFakQ7Ozs7Ozs7Ozs7Ozs7O0FBY0FBLFVBQU0sS0FBTixFQUFhLFVBQUNDLElBQUQsRUFBVTtBQUNyQkwsV0FBS00sT0FBTCxDQUFhSixNQUFiLEVBQ0NLLEdBREQsQ0FDSyx5REFETCxFQUVDQyxHQUZELENBRUssVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakJDLGdCQUFRQyxHQUFSLENBQVlGLElBQUlHLElBQWhCO0FBQ0FaLGVBQU9hLEtBQVAsQ0FBYUosSUFBSUssTUFBakIsRUFBeUIsR0FBekI7QUFDQVY7QUFDRCxPQU5EO0FBT0QsS0FSRDs7QUFVQTs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7QUFVRCxHQTlDRDtBQXFERCxDQTdJRCIsImZpbGUiOiIyX2Z1bmN0aW9uYWwtdGVzdHMuanMiLCJzb3VyY2VSb290IjoiL2FwcC90ZXN0cyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qXG4qXG4qICAgICAgIEZJTEwgSU4gRUFDSCBGVU5DVElPTkFMIFRFU1QgQkVMT1cgQ09NUExFVEVMWVxuKiAgICAgICAtLS0tLVtLZWVwIHRoZSB0ZXN0cyBpbiB0aGUgc2FtZSBvcmRlciFdLS0tLS1cbiogICAgICAgKGlmIGFkZGl0aW9uYWwgYXJlIGFkZGVkLCBrZWVwIHRoZW0gYXQgdGhlIHZlcnkgZW5kISlcbiovXG5cbnZhciBjaGFpSHR0cCA9IHJlcXVpcmUoJ2NoYWktaHR0cCcpO1xudmFyIGNoYWkgPSByZXF1aXJlKCdjaGFpJyk7XG52YXIgYXNzZXJ0ID0gY2hhaS5hc3NlcnQ7XG52YXIgc2VydmVyID0gcmVxdWlyZSgnLi4vc2VydmVyJyk7XG5cbmNoYWkudXNlKGNoYWlIdHRwKTtcblxuc3VpdGUoJ0Z1bmN0aW9uYWwgVGVzdHMnLCAoKSA9PiB7XG5cbiAgXG4gIFxuICBzdWl0ZSgnQVBJIFJPVVRJTkcgRk9SIC9hcGkvdGhyZWFkcy86Ym9hcmQnLCAoKSA9PiB7XG4gICAgXG4gICAgLyp0ZXN0KCdQT1NUJywgKGRvbmUpID0+IHtcbiAgICAgIGNoYWkucmVxdWVzdChzZXJ2ZXIpXG4gICAgICAucG9zdCgnL2FwaS90aHJlYWRzL3Nwb3J0cycpXG4gICAgICAuc2VuZCh7dGV4dDogJ0NoYWkgdGVzdGluZyBwb3N0JywgZGVsZXRlX3Bhc3N3b3JkOiAnY2hhaSd9KVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJlcy5zdGF0dXMsIDIwMCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH0pOyovXG4gICAgXG4gICAgLyp0ZXN0KCdHRVQnLCAoZG9uZSkgPT4ge1xuICAgICAgY2hhaS5yZXF1ZXN0KHNlcnZlcilcbiAgICAgIC5nZXQoJy9hcGkvdGhyZWFkcy9nZW5lcmFsJylcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIGxldCB7IHRocmVhZHMgfSA9IHJlcy5ib2R5O1xuICAgICAgICBcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJlcy5zdGF0dXMsIDIwMCk7XG4gICAgICAgIFxuICAgICAgICBhc3NlcnQuaXNBcnJheSh0aHJlYWRzKTtcbiAgICAgICAgYXNzZXJ0LmlzQXRNb3N0KHRocmVhZHMubGVuZ3RoLCAxMCk7XG4gICAgICAgIFxuICAgICAgICB0aHJlYWRzLmZvckVhY2godGhyZWFkID0+IHtcbiAgICAgICAgICBhc3NlcnQuaXNBdE1vc3QodGhyZWFkLnJlcGxpZXMubGVuZ3RoLCAzKTtcbiAgICAgICAgICBcbiAgICAgICAgICBhc3NlcnQubm90UHJvcGVydHkodGhyZWFkLCAnZGVsZXRlX3Bhc3N3b3JkJyk7XG4gICAgICAgICAgYXNzZXJ0Lm5vdFByb3BlcnR5KHRocmVhZCwgJ3JlcG9ydGVkJyk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKHRocmVhZC5yZXBsaWVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyZWFkLnJlcGxpZXMuZm9yRWFjaChyZXBseSA9PiB7XG4gICAgICAgICAgICAgIGFzc2VydC5ub3RQcm9wZXJ0eShyZXBseSwgJ2RlbGV0ZV9wYXNzd29yZCcpO1xuICAgICAgICAgICAgICBhc3NlcnQubm90UHJvcGVydHkocmVwbHksICdyZXBvcnRlZCcpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfSk7Ki9cbiAgICBcbiAgICAvL3Rlc3QgY29ycmVjdCBwd1xuICAgIC8qdGVzdCgnREVMRVRFJywgKGRvbmUpID0+IHtcbiAgICAgIGNoYWkucmVxdWVzdChzZXJ2ZXIpXG4gICAgICAuZGVsZXRlKCcvYXBpL3RocmVhZHMvcG9saXRpY3MnKVxuICAgICAgLnNlbmQoe3RocmVhZF9pZDogJzVjNTYwNTYyOGZmNjhmNDM5M2I3NjdkMCcsIGRlbGV0ZV9wYXNzd29yZDogJ3B3J30pXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBhc3NlcnQuZXF1YWwocmVzLnN0YXR1cywgMjAwKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJlcy5ib2R5Lm1lc3NhZ2UsICdTdWNjZXNzJyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH0pOyovXG4gICAgXG4gICAgLy90ZXN0IGluY29ycmVjdCBwd1xuICAgIC8qdGVzdCgnREVMRVRFJywgKGRvbmUpID0+IHtcbiAgICAgIGNoYWkucmVxdWVzdChzZXJ2ZXIpXG4gICAgICAuZGVsZXRlKCcvYXBpL3RocmVhZHMvcG9saXRpY3MnKVxuICAgICAgLnNlbmQoe3RocmVhZF9pZDogJzVjNTYwNWUyNWI5YmM0NDZlZGRmN2ZjOScsIGRlbGV0ZV9wYXNzd29yZDogJzEyMyd9KVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJlcy5zdGF0dXMsIDIwMCk7XG4gICAgICAgIGFzc2VydC5lcXVhbChyZXMuYm9keS5tZXNzYWdlLCAnSW5jb3JyZWN0IFBhc3N3b3JkJyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH0pOyovXG4gICAgXG4gICAgXG4gICAgXG4gICAgLyp0ZXN0KCdQVVQnLCAoZG9uZSkgPT4ge1xuICAgICAgY2hhaS5yZXF1ZXN0KHNlcnZlcilcbiAgICAgIC5wdXQoJy9hcGkvdGhyZWFkcy9wb2xpdGljcycpXG4gICAgICAuc2VuZCh7dGhyZWFkX2lkOiAnNWM1MGQxM2EyYmRiMjczOTZmYWI3OTdmJ30pXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBhc3NlcnQuZXF1YWwocmVzLnN0YXR1cywgMjAwKTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJlcy5ib2R5Lm1lc3NhZ2UsICdTdWNjZXNzJyk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH0pOyovXG4gICAgXG5cbiAgfSk7XG4gIFxuICBcbiAgXG4gIFxuICBcbiAgc3VpdGUoJ0FQSSBST1VUSU5HIEZPUiAvYXBpL3JlcGxpZXMvOmJvYXJkJywgKCkgPT4ge1xuICAgIFxuICAgIC8qdGVzdCgnUE9TVCcsIChkb25lKSA9PiB7XG4gICAgICBjaGFpLnJlcXVlc3Qoc2VydmVyKVxuICAgICAgLnBvc3QoJy9hcGkvcmVwbGllcy9wb2xpdGljcycpXG4gICAgICAuc2VuZCh7XG4gICAgICAgIHRocmVhZF9pZDogJzVjNTYwNWUyNWI5YmM0NDZlZGRmN2ZjOScsIFxuICAgICAgICB0ZXh0OiAnY2hhaSB0ZXN0aW5nIHRleHQnLCBcbiAgICAgICAgZGVsZXRlX3Bhc3N3b3JkOiAnY2hhaSdcbiAgICAgIH0pXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBhc3NlcnQuZXF1YWwocmVzLnN0YXR1cywgMjAwKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfSk7Ki9cbiAgICBcbiAgICBzdWl0ZSgnR0VUJywgKGRvbmUpID0+IHtcbiAgICAgIGNoYWkucmVxdWVzdChzZXJ2ZXIpXG4gICAgICAuZ2V0KCcvYXBpL3JlcGxpZXMvZ2VuZXJhbD90aHJlYWRfaWQ9NWMzZDEzYjk2Y2RlOTEwMjY3N2UzMzQwJylcbiAgICAgIC5lbmQoKGVyciwgcmVzKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcy5ib2R5KTtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJlcy5zdGF0dXMsIDIwMCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIFxuICAgIC8qc3VpdGUoJ1BVVCcsIChkb25lKSA9PiB7XG4gICAgICBjaGFpLnJlcXVlc3Qoc2VydmVyKVxuICAgICAgLnB1dCgnL2FwaS9yZXBsaWVzL2dlbmVyYWwnKVxuICAgICAgLnNlbmQoKVxuICAgICAgLmVuZCgoZXJyLCByZXMpID0+IHtcbiAgICAgICAgYXNzZXJ0LmVxdWFsKHJlcy5zdGF0dXMsIDIwMCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH0pOyovXG4gICAgXG4gICAgLypzdWl0ZSgnREVMRVRFJywgKGRvbmUpID0+IHtcbiAgICAgIGNoYWkucmVxdWVzdChzZXJ2ZXIpXG4gICAgICAuZGVsZXRlKCcvYXBpL3JlcGxpZXMvZ2VuZXJhbCcpXG4gICAgICAuc2VuZCgpXG4gICAgICAuZW5kKChlcnIsIHJlcykgPT4ge1xuICAgICAgICBhc3NlcnQuZXF1YWwocmVzLnN0YXR1cywgMjAwKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfSk7Ki9cbiAgICBcbiAgfSk7XG4gIFxuICBcbiAgXG4gIFxuICBcblxufSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "2_functional-tests.js"
      ],
      "names": [
        "chaiHttp",
        "require",
        "chai",
        "assert",
        "server",
        "use",
        "suite",
        "done",
        "request",
        "get",
        "end",
        "err",
        "res",
        "console",
        "log",
        "body",
        "equal",
        "status"
      ],
      "mappings": ";;AAAA;;;;;;;;AAQA,IAAIA,WAAWC,QAAQ,WAAR,CAAf;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,SAASD,KAAKC,MAAlB;AACA,IAAIC,SAASH,QAAQ,WAAR,CAAb;;AAEAC,KAAKG,GAAL,CAASL,QAAT;;AAEAM,MAAM,kBAAN,EAA0B,YAAM;;AAI9BA,QAAM,qCAAN,EAA6C,YAAM;;AAEjD;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;;;;;;;;;;;AAWA;AACA;;;;;;;;;;;AAaA;;;;;;;;;;;AAYD,GA9ED;;AAoFAA,QAAM,qCAAN,EAA6C,YAAM;;AAEjD;;;;;;;;;;;;;;AAcAA,UAAM,KAAN,EAAa,UAACC,IAAD,EAAU;AACrBL,WAAKM,OAAL,CAAaJ,MAAb,EACCK,GADD,CACK,yDADL,EAECC,GAFD,CAEK,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBC,gBAAQC,GAAR,CAAYF,IAAIG,IAAhB;AACAZ,eAAOa,KAAP,CAAaJ,IAAIK,MAAjB,EAAyB,GAAzB;AACAV;AACD,OAND;AAOD,KARD;;AAUA;;;;;;;;;;AAUA;;;;;;;;;AAUD,GA9CD;AAqDD,CA7ID",
      "file": "2_functional-tests.js",
      "sourceRoot": "/app/tests",
      "sourcesContent": [
        "/*\n*\n*\n*       FILL IN EACH FUNCTIONAL TEST BELOW COMPLETELY\n*       -----[Keep the tests in the same order!]-----\n*       (if additional are added, keep them at the very end!)\n*/\n\nvar chaiHttp = require('chai-http');\nvar chai = require('chai');\nvar assert = chai.assert;\nvar server = require('../server');\n\nchai.use(chaiHttp);\n\nsuite('Functional Tests', () => {\n\n  \n  \n  suite('API ROUTING FOR /api/threads/:board', () => {\n    \n    /*test('POST', (done) => {\n      chai.request(server)\n      .post('/api/threads/sports')\n      .send({text: 'Chai testing post', delete_password: 'chai'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n    \n    /*test('GET', (done) => {\n      chai.request(server)\n      .get('/api/threads/general')\n      .end((err, res) => {\n        let { threads } = res.body;\n        \n        assert.equal(res.status, 200);\n        \n        assert.isArray(threads);\n        assert.isAtMost(threads.length, 10);\n        \n        threads.forEach(thread => {\n          assert.isAtMost(thread.replies.length, 3);\n          \n          assert.notProperty(thread, 'delete_password');\n          assert.notProperty(thread, 'reported');\n          \n          if (thread.replies.length) {\n            thread.replies.forEach(reply => {\n              assert.notProperty(reply, 'delete_password');\n              assert.notProperty(reply, 'reported');\n            });\n          }\n        });\n        done();\n      });\n    });*/\n    \n    //test correct pw\n    /*test('DELETE', (done) => {\n      chai.request(server)\n      .delete('/api/threads/politics')\n      .send({thread_id: '5c5605628ff68f4393b767d0', delete_password: 'pw'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.message, 'Success');\n        done();\n      });\n    });*/\n    \n    //test incorrect pw\n    /*test('DELETE', (done) => {\n      chai.request(server)\n      .delete('/api/threads/politics')\n      .send({thread_id: '5c5605e25b9bc446eddf7fc9', delete_password: '123'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.message, 'Incorrect Password');\n        done();\n      });\n    });*/\n    \n    \n    \n    /*test('PUT', (done) => {\n      chai.request(server)\n      .put('/api/threads/politics')\n      .send({thread_id: '5c50d13a2bdb27396fab797f'})\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        assert.equal(res.body.message, 'Success');\n        done();\n      });\n    });*/\n    \n\n  });\n  \n  \n  \n  \n  \n  suite('API ROUTING FOR /api/replies/:board', () => {\n    \n    /*test('POST', (done) => {\n      chai.request(server)\n      .post('/api/replies/politics')\n      .send({\n        thread_id: '5c5605e25b9bc446eddf7fc9', \n        text: 'chai testing text', \n        delete_password: 'chai'\n      })\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n    \n    suite('GET', (done) => {\n      chai.request(server)\n      .get('/api/replies/general?thread_id=5c3d13b96cde9102677e3340')\n      .end((err, res) => {\n        console.log(res.body);\n        assert.equal(res.status, 200);\n        done();\n      });\n    });\n    \n    /*suite('PUT', (done) => {\n      chai.request(server)\n      .put('/api/replies/general')\n      .send()\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n    \n    /*suite('DELETE', (done) => {\n      chai.request(server)\n      .delete('/api/replies/general')\n      .send()\n      .end((err, res) => {\n        assert.equal(res.status, 200);\n        done();\n      });\n    });*/\n    \n  });\n  \n  \n  \n  \n  \n\n});\n"
      ]
    },
    "mtime": 1549142388000
  }
}